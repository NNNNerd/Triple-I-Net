2023-11-07 11:29:00,876 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.13 (default, Mar 29 2022, 02:18:16) [GCC 7.5.0]
CUDA available: True
GPU 0: GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Build cuda_11.1.TC455_06.29190527_0
GCC: gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
PyTorch: 1.10.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.0
OpenCV: 4.5.5
MMCV: 1.4.8
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.3
MMDetection: 2.23.0+3e26931
------------------------------------------------------------

2023-11-07 11:29:01,218 - mmdet - INFO - Distributed training: False
2023-11-07 11:29:01,562 - mmdet - INFO - Config:
model = dict(
    type='TINet',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=True),
        norm_eval=True,
        style='pytorch',
        init_cfg=dict(type='Pretrained', checkpoint='torchvision://resnet50')),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    inter=2,
    intra=2,
    w=dict(i=0.5, m=0.5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 1.5],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHead',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Shared2FCBBoxHead',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=4,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=True),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
dataset_type = 'FLIRA'
data_root = '/home/zhangyan22/data/FLIR_aligned/'
img_norm_cfg = dict(
    mean_list=([160.915, 163.213, 161.171], [136.095, 136.095, 136.095]),
    std_list=([56.314, 59.272, 63.472], [66.367, 66.367, 66.367]),
    to_rgb=True)
train_pipeline = [
    dict(
        type='LoadImagePairFromFile',
        spectrals=('visible', 'thermal'),
        daynight=True),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(640, 512), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='MultiNormalize',
        mean_list=([160.915, 163.213, 161.171], [136.095, 136.095, 136.095]),
        std_list=([56.314, 59.272, 63.472], [66.367, 66.367, 66.367]),
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(
        type='Collect',
        keys=['img', 'gt_bboxes', 'gt_labels'],
        meta_keys=('filename', 'ori_filename', 'ori_shape', 'img_shape',
                   'pad_shape', 'scale_factor', 'flip', 'flip_direction',
                   'img_norm_cfg', 'dn_labels'))
]
test_pipeline = [
    dict(type='LoadImagePairFromFile', spectrals=('visible', 'thermal')),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(640, 512),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='MultiNormalize',
                mean_list=([160.915, 163.213,
                            161.171], [136.095, 136.095, 136.095]),
                std_list=([56.314, 59.272, 63.472], [66.367, 66.367, 66.367]),
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train=dict(
        type='FLIRA',
        ann_file='/home/zhangyan22/data/FLIR_aligned/FLIR_train.json',
        img_prefix='/home/zhangyan22/data/FLIR_aligned/train/',
        pipeline=[
            dict(
                type='LoadImagePairFromFile',
                spectrals=('visible', 'thermal'),
                daynight=True),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(640, 512), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='MultiNormalize',
                mean_list=([160.915, 163.213,
                            161.171], [136.095, 136.095, 136.095]),
                std_list=([56.314, 59.272, 63.472], [66.367, 66.367, 66.367]),
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(
                type='Collect',
                keys=['img', 'gt_bboxes', 'gt_labels'],
                meta_keys=('filename', 'ori_filename', 'ori_shape',
                           'img_shape', 'pad_shape', 'scale_factor', 'flip',
                           'flip_direction', 'img_norm_cfg', 'dn_labels'))
        ]),
    val=dict(
        type='FLIRA',
        ann_file='/home/zhangyan22/data/FLIR_aligned/FLIR_test.json',
        img_prefix='/home/zhangyan22/data/FLIR_aligned/val/',
        pipeline=[
            dict(
                type='LoadImagePairFromFile',
                spectrals=('visible', 'thermal')),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(640, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='MultiNormalize',
                        mean_list=([160.915, 163.213,
                                    161.171], [136.095, 136.095, 136.095]),
                        std_list=([56.314, 59.272,
                                   63.472], [66.367, 66.367, 66.367]),
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='DefaultFormatBundle'),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='FLIRA',
        ann_file='/home/zhangyan22/data/FLIR_aligned/FLIR_test.json',
        img_prefix='/home/zhangyan22/data/FLIR_aligned/val/',
        pipeline=[
            dict(
                type='LoadImagePairFromFile',
                spectrals=('visible', 'thermal')),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(640, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='MultiNormalize',
                        mean_list=([160.915, 163.213,
                                    161.171], [136.095, 136.095, 136.095]),
                        std_list=([56.314, 59.272,
                                   63.472], [66.367, 66.367, 66.367]),
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='DefaultFormatBundle'),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
evaluation = dict(interval=1, metric='bbox')
optimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=500,
    warmup_ratio=0.001,
    step=[8, 11])
runner = dict(type='EpochBasedRunner', max_epochs=12)
checkpoint_config = dict(interval=1)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
work_dir = 'work_dir/faster_rcnn_r50_fpn_tinet/flir2'
auto_resume = False
gpu_ids = [0]

2023-11-07 11:29:01,562 - mmdet - INFO - Set random seed to 963408299, deterministic: False
2023-11-07 11:29:02,136 - mmdet - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-11-07 11:29:03,056 - mmdet - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-11-07 11:29:03,134 - mmdet - INFO - initialize ResNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'torchvision://resnet50'}
2023-11-07 11:29:03,205 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
2023-11-07 11:29:03,220 - mmdet - INFO - initialize RPNHead with init_cfg {'type': 'Normal', 'layer': 'Conv2d', 'std': 0.01}
2023-11-07 11:29:03,223 - mmdet - INFO - initialize Shared2FCBBoxHead with init_cfg [{'type': 'Normal', 'std': 0.01, 'override': {'name': 'fc_cls'}}, {'type': 'Normal', 'std': 0.001, 'override': {'name': 'fc_reg'}}, {'type': 'Xavier', 'distribution': 'uniform', 'override': [{'name': 'shared_fcs'}, {'name': 'cls_fcs'}, {'name': 'reg_fcs'}]}]
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_v.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone_t.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

inter_ma1.fc.0.weight - torch.Size([16, 256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.fc.2.weight - torch.Size([256, 16]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_v.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_v.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_v.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_v.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_v.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_v.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_v.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_v.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_t.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_t.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_t.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_t.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_t.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_t.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_t.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma1.res_t.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.fc.0.weight - torch.Size([16, 256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.fc.2.weight - torch.Size([256, 16]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_v.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_v.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_v.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_v.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_v.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_v.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_v.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_v.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_t.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_t.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_t.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_t.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_t.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_t.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_t.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma2.res_t.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.fc.0.weight - torch.Size([16, 256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.fc.2.weight - torch.Size([256, 16]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_v.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_v.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_v.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_v.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_v.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_v.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_v.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_v.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_t.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_t.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_t.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_t.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_t.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_t.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_t.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma3.res_t.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.fc.0.weight - torch.Size([16, 256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.fc.2.weight - torch.Size([256, 16]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_v.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_v.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_v.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_v.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_v.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_v.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_v.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_v.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_t.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_t.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_t.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_t.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_t.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_t.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_t.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma4.res_t.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.fc.0.weight - torch.Size([16, 256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.fc.2.weight - torch.Size([256, 16]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_v.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_v.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_v.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_v.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_v.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_v.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_v.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_v.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_t.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_t.conv1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_t.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_t.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_t.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_t.conv2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_t.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

inter_ma5.res_t.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

intra_ma.predictor_v.conv.weight - torch.Size([1, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of TINet  

intra_ma.predictor_v.conv.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of TINet  

intra_ma.predictor_t.conv.weight - torch.Size([1, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of TINet  

intra_ma.predictor_t.conv.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of TINet  

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of TINet  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([5, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([5]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([16, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([16]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2023-11-07 11:29:06,144 - mmdet - INFO - Start running, host: zhangyan22@microsoft, work_dir: /home/zhangyan22/mmdetection/work_dir/faster_rcnn_r50_fpn_tinet/flir2
2023-11-07 11:29:06,144 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-11-07 11:29:06,144 - mmdet - INFO - workflow: [('train', 1)], max: 12 epochs
2023-11-07 11:29:06,144 - mmdet - INFO - Checkpoints will be saved to /home/zhangyan22/mmdetection/work_dir/faster_rcnn_r50_fpn_tinet/flir2 by HardDiskBackend.
2023-11-07 11:29:25,654 - mmdet - INFO - Epoch [1][50/1286]	lr: 4.945e-04, eta: 1:39:58, time: 0.390, data_time: 0.051, memory: 5971, mask_loss: 0.1034, loss_rpn_cls: 0.5679, loss_rpn_bbox: 0.1247, loss_cls: 0.3658, acc: 92.3027, loss_bbox: 0.0160, loss: 1.1778
2023-11-07 11:29:41,421 - mmdet - INFO - Epoch [1][100/1286]	lr: 9.940e-04, eta: 1:30:06, time: 0.315, data_time: 0.005, memory: 5972, mask_loss: 0.0404, loss_rpn_cls: 0.2521, loss_rpn_bbox: 0.1013, loss_cls: 0.1874, acc: 96.2246, loss_bbox: 0.0975, loss: 0.6787
2023-11-07 11:29:56,958 - mmdet - INFO - Epoch [1][150/1286]	lr: 1.494e-03, eta: 1:26:15, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0193, loss_rpn_cls: 0.1407, loss_rpn_bbox: 0.0931, loss_cls: 0.2515, acc: 93.4395, loss_bbox: 0.2127, loss: 0.7173
2023-11-07 11:30:12,585 - mmdet - INFO - Epoch [1][200/1286]	lr: 1.993e-03, eta: 1:24:19, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0166, loss_rpn_cls: 0.1036, loss_rpn_bbox: 0.0889, loss_cls: 0.2779, acc: 90.9189, loss_bbox: 0.3159, loss: 0.8030
2023-11-07 11:30:28,199 - mmdet - INFO - Epoch [1][250/1286]	lr: 2.493e-03, eta: 1:23:02, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0150, loss_rpn_cls: 0.0823, loss_rpn_bbox: 0.0880, loss_cls: 0.3096, acc: 89.4277, loss_bbox: 0.3712, loss: 0.8661
2023-11-07 11:30:43,803 - mmdet - INFO - Epoch [1][300/1286]	lr: 2.992e-03, eta: 1:22:05, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0141, loss_rpn_cls: 0.0804, loss_rpn_bbox: 0.0839, loss_cls: 0.3064, acc: 89.0967, loss_bbox: 0.3992, loss: 0.8840
2023-11-07 11:30:59,404 - mmdet - INFO - Epoch [1][350/1286]	lr: 3.492e-03, eta: 1:21:19, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0111, loss_rpn_cls: 0.0673, loss_rpn_bbox: 0.0789, loss_cls: 0.2897, acc: 89.1064, loss_bbox: 0.4417, loss: 0.8886
2023-11-07 11:31:15,004 - mmdet - INFO - Epoch [1][400/1286]	lr: 3.991e-03, eta: 1:20:42, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0116, loss_rpn_cls: 0.0593, loss_rpn_bbox: 0.0793, loss_cls: 0.2981, acc: 88.7324, loss_bbox: 0.4434, loss: 0.8917
2023-11-07 11:31:30,587 - mmdet - INFO - Epoch [1][450/1286]	lr: 4.491e-03, eta: 1:20:08, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0115, loss_rpn_cls: 0.0503, loss_rpn_bbox: 0.0721, loss_cls: 0.2676, acc: 89.9639, loss_bbox: 0.4035, loss: 0.8050
2023-11-07 11:31:46,232 - mmdet - INFO - Epoch [1][500/1286]	lr: 4.990e-03, eta: 1:19:40, time: 0.313, data_time: 0.004, memory: 5972, mask_loss: 0.0115, loss_rpn_cls: 0.0554, loss_rpn_bbox: 0.0773, loss_cls: 0.2794, acc: 89.3828, loss_bbox: 0.4197, loss: 0.8433
2023-11-07 11:32:01,938 - mmdet - INFO - Epoch [1][550/1286]	lr: 5.000e-03, eta: 1:19:16, time: 0.314, data_time: 0.005, memory: 5972, mask_loss: 0.0109, loss_rpn_cls: 0.0503, loss_rpn_bbox: 0.0781, loss_cls: 0.2820, acc: 89.1572, loss_bbox: 0.4385, loss: 0.8598
2023-11-07 11:32:17,542 - mmdet - INFO - Epoch [1][600/1286]	lr: 5.000e-03, eta: 1:18:50, time: 0.312, data_time: 0.004, memory: 5972, mask_loss: 0.0097, loss_rpn_cls: 0.0400, loss_rpn_bbox: 0.0625, loss_cls: 0.2626, acc: 89.6963, loss_bbox: 0.4212, loss: 0.7961
2023-11-07 11:32:33,189 - mmdet - INFO - Epoch [1][650/1286]	lr: 5.000e-03, eta: 1:18:28, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0114, loss_rpn_cls: 0.0483, loss_rpn_bbox: 0.0744, loss_cls: 0.2688, acc: 89.4922, loss_bbox: 0.4378, loss: 0.8408
2023-11-07 11:32:48,793 - mmdet - INFO - Epoch [1][700/1286]	lr: 5.000e-03, eta: 1:18:05, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0100, loss_rpn_cls: 0.0413, loss_rpn_bbox: 0.0649, loss_cls: 0.2543, acc: 89.8506, loss_bbox: 0.4196, loss: 0.7902
2023-11-07 11:33:04,419 - mmdet - INFO - Epoch [1][750/1286]	lr: 5.000e-03, eta: 1:17:44, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0101, loss_rpn_cls: 0.0452, loss_rpn_bbox: 0.0744, loss_cls: 0.2579, acc: 89.9648, loss_bbox: 0.4115, loss: 0.7991
2023-11-07 11:33:20,085 - mmdet - INFO - Epoch [1][800/1286]	lr: 5.000e-03, eta: 1:17:24, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0105, loss_rpn_cls: 0.0447, loss_rpn_bbox: 0.0646, loss_cls: 0.2736, acc: 89.2637, loss_bbox: 0.4389, loss: 0.8323
2023-11-07 11:33:35,714 - mmdet - INFO - Epoch [1][850/1286]	lr: 5.000e-03, eta: 1:17:04, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0090, loss_rpn_cls: 0.0362, loss_rpn_bbox: 0.0592, loss_cls: 0.2441, acc: 90.2109, loss_bbox: 0.4184, loss: 0.7669
2023-11-07 11:33:51,324 - mmdet - INFO - Epoch [1][900/1286]	lr: 5.000e-03, eta: 1:16:44, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0091, loss_rpn_cls: 0.0387, loss_rpn_bbox: 0.0559, loss_cls: 0.2285, acc: 90.7285, loss_bbox: 0.3985, loss: 0.7307
2023-11-07 11:34:06,918 - mmdet - INFO - Epoch [1][950/1286]	lr: 5.000e-03, eta: 1:16:24, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0091, loss_rpn_cls: 0.0319, loss_rpn_bbox: 0.0596, loss_cls: 0.2374, acc: 90.5020, loss_bbox: 0.3909, loss: 0.7289
2023-11-07 11:34:22,611 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 11:34:22,611 - mmdet - INFO - Epoch [1][1000/1286]	lr: 5.000e-03, eta: 1:16:07, time: 0.314, data_time: 0.005, memory: 5972, mask_loss: 0.0093, loss_rpn_cls: 0.0418, loss_rpn_bbox: 0.0674, loss_cls: 0.2406, acc: 90.2949, loss_bbox: 0.3984, loss: 0.7576
2023-11-07 11:34:38,232 - mmdet - INFO - Epoch [1][1050/1286]	lr: 5.000e-03, eta: 1:15:48, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0095, loss_rpn_cls: 0.0445, loss_rpn_bbox: 0.0613, loss_cls: 0.2323, acc: 90.9551, loss_bbox: 0.3870, loss: 0.7346
2023-11-07 11:34:53,863 - mmdet - INFO - Epoch [1][1100/1286]	lr: 5.000e-03, eta: 1:15:30, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0094, loss_rpn_cls: 0.0325, loss_rpn_bbox: 0.0647, loss_cls: 0.2391, acc: 90.2373, loss_bbox: 0.4072, loss: 0.7529
2023-11-07 11:35:09,470 - mmdet - INFO - Epoch [1][1150/1286]	lr: 5.000e-03, eta: 1:15:11, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0084, loss_rpn_cls: 0.0384, loss_rpn_bbox: 0.0594, loss_cls: 0.2374, acc: 90.5693, loss_bbox: 0.4130, loss: 0.7566
2023-11-07 11:35:25,061 - mmdet - INFO - Epoch [1][1200/1286]	lr: 5.000e-03, eta: 1:14:53, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0078, loss_rpn_cls: 0.0358, loss_rpn_bbox: 0.0609, loss_cls: 0.2246, acc: 90.9297, loss_bbox: 0.4062, loss: 0.7352
2023-11-07 11:35:40,683 - mmdet - INFO - Epoch [1][1250/1286]	lr: 5.000e-03, eta: 1:14:36, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0074, loss_rpn_cls: 0.0326, loss_rpn_bbox: 0.0582, loss_cls: 0.2214, acc: 91.0664, loss_bbox: 0.3875, loss: 0.7070
2023-11-07 11:35:51,957 - mmdet - INFO - Saving checkpoint at 1 epochs
2023-11-07 11:36:31,097 - mmdet - INFO - Evaluating bbox...
2023-11-07 11:36:36,914 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.8315 | person   | 0.7401 | bicycle  | 0.4891 |
| dog      | 0.0000 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 11:36:36,914 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.4273 | person   | 0.2903 | bicycle  | 0.1666 |
| dog      | 0.0000 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 11:36:36,947 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 11:36:36,948 - mmdet - INFO - Epoch(val) [1][1013]	bbox_mAP: 0.2210, bbox_mAP_50: 0.5152, bbox_mAP_75: 0.1514, bbox_mAP_s: 0.1545, bbox_mAP_m: 0.2646, bbox_mAP_l: 0.3804, bbox_mAP_copypaste: 0.2210 0.5152 0.1514 0.1545 0.2646 0.3804
2023-11-07 11:36:54,695 - mmdet - INFO - Epoch [2][50/1286]	lr: 5.000e-03, eta: 1:12:29, time: 0.355, data_time: 0.049, memory: 5972, mask_loss: 0.0073, loss_rpn_cls: 0.0309, loss_rpn_bbox: 0.0555, loss_cls: 0.2198, acc: 91.1289, loss_bbox: 0.3810, loss: 0.6944
2023-11-07 11:37:10,247 - mmdet - INFO - Epoch [2][100/1286]	lr: 5.000e-03, eta: 1:12:15, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0070, loss_rpn_cls: 0.0305, loss_rpn_bbox: 0.0596, loss_cls: 0.2301, acc: 90.6777, loss_bbox: 0.3963, loss: 0.7235
2023-11-07 11:37:25,758 - mmdet - INFO - Epoch [2][150/1286]	lr: 5.000e-03, eta: 1:12:00, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0073, loss_rpn_cls: 0.0309, loss_rpn_bbox: 0.0577, loss_cls: 0.2253, acc: 90.6904, loss_bbox: 0.3972, loss: 0.7185
2023-11-07 11:37:41,310 - mmdet - INFO - Epoch [2][200/1286]	lr: 5.000e-03, eta: 1:11:46, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0069, loss_rpn_cls: 0.0286, loss_rpn_bbox: 0.0540, loss_cls: 0.2054, acc: 91.7891, loss_bbox: 0.3651, loss: 0.6600
2023-11-07 11:37:56,912 - mmdet - INFO - Epoch [2][250/1286]	lr: 5.000e-03, eta: 1:11:32, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0093, loss_rpn_cls: 0.0378, loss_rpn_bbox: 0.0620, loss_cls: 0.2334, acc: 90.8789, loss_bbox: 0.3874, loss: 0.7299
2023-11-07 11:38:12,449 - mmdet - INFO - Epoch [2][300/1286]	lr: 5.000e-03, eta: 1:11:17, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0076, loss_rpn_cls: 0.0368, loss_rpn_bbox: 0.0589, loss_cls: 0.2229, acc: 90.9980, loss_bbox: 0.3904, loss: 0.7166
2023-11-07 11:38:27,992 - mmdet - INFO - Epoch [2][350/1286]	lr: 5.000e-03, eta: 1:11:03, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0080, loss_rpn_cls: 0.0315, loss_rpn_bbox: 0.0542, loss_cls: 0.2205, acc: 91.1572, loss_bbox: 0.3882, loss: 0.7023
2023-11-07 11:38:43,568 - mmdet - INFO - Epoch [2][400/1286]	lr: 5.000e-03, eta: 1:10:48, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0078, loss_rpn_cls: 0.0305, loss_rpn_bbox: 0.0588, loss_cls: 0.2148, acc: 91.1797, loss_bbox: 0.3845, loss: 0.6964
2023-11-07 11:38:59,061 - mmdet - INFO - Epoch [2][450/1286]	lr: 5.000e-03, eta: 1:10:33, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0072, loss_rpn_cls: 0.0286, loss_rpn_bbox: 0.0518, loss_cls: 0.1973, acc: 91.9355, loss_bbox: 0.3535, loss: 0.6385
2023-11-07 11:39:14,561 - mmdet - INFO - Epoch [2][500/1286]	lr: 5.000e-03, eta: 1:10:18, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0068, loss_rpn_cls: 0.0269, loss_rpn_bbox: 0.0517, loss_cls: 0.2156, acc: 91.1367, loss_bbox: 0.3870, loss: 0.6880
2023-11-07 11:39:30,053 - mmdet - INFO - Epoch [2][550/1286]	lr: 5.000e-03, eta: 1:10:03, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0072, loss_rpn_cls: 0.0274, loss_rpn_bbox: 0.0503, loss_cls: 0.2008, acc: 91.8135, loss_bbox: 0.3632, loss: 0.6489
2023-11-07 11:39:45,563 - mmdet - INFO - Epoch [2][600/1286]	lr: 5.000e-03, eta: 1:09:48, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0068, loss_rpn_cls: 0.0319, loss_rpn_bbox: 0.0521, loss_cls: 0.2093, acc: 91.4395, loss_bbox: 0.3706, loss: 0.6709
2023-11-07 11:40:01,108 - mmdet - INFO - Epoch [2][650/1286]	lr: 5.000e-03, eta: 1:09:33, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0072, loss_rpn_cls: 0.0301, loss_rpn_bbox: 0.0545, loss_cls: 0.2099, acc: 91.4482, loss_bbox: 0.3780, loss: 0.6797
2023-11-07 11:40:16,659 - mmdet - INFO - Epoch [2][700/1286]	lr: 5.000e-03, eta: 1:09:18, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0063, loss_rpn_cls: 0.0278, loss_rpn_bbox: 0.0558, loss_cls: 0.2118, acc: 91.3906, loss_bbox: 0.3838, loss: 0.6855
2023-11-07 11:40:32,251 - mmdet - INFO - Epoch [2][750/1286]	lr: 5.000e-03, eta: 1:09:03, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0070, loss_rpn_cls: 0.0292, loss_rpn_bbox: 0.0590, loss_cls: 0.2224, acc: 91.0312, loss_bbox: 0.3865, loss: 0.7042
2023-11-07 11:40:47,742 - mmdet - INFO - Epoch [2][800/1286]	lr: 5.000e-03, eta: 1:08:48, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0067, loss_rpn_cls: 0.0260, loss_rpn_bbox: 0.0499, loss_cls: 0.2018, acc: 91.7969, loss_bbox: 0.3526, loss: 0.6370
2023-11-07 11:41:03,228 - mmdet - INFO - Epoch [2][850/1286]	lr: 5.000e-03, eta: 1:08:33, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0067, loss_rpn_cls: 0.0267, loss_rpn_bbox: 0.0544, loss_cls: 0.1997, acc: 91.7383, loss_bbox: 0.3601, loss: 0.6475
2023-11-07 11:41:18,772 - mmdet - INFO - Epoch [2][900/1286]	lr: 5.000e-03, eta: 1:08:18, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0066, loss_rpn_cls: 0.0316, loss_rpn_bbox: 0.0545, loss_cls: 0.2159, acc: 91.1152, loss_bbox: 0.3890, loss: 0.6977
2023-11-07 11:41:34,380 - mmdet - INFO - Epoch [2][950/1286]	lr: 5.000e-03, eta: 1:08:03, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0066, loss_rpn_cls: 0.0298, loss_rpn_bbox: 0.0658, loss_cls: 0.2103, acc: 91.3291, loss_bbox: 0.3795, loss: 0.6920
2023-11-07 11:41:49,870 - mmdet - INFO - Epoch [2][1000/1286]	lr: 5.000e-03, eta: 1:07:48, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0068, loss_rpn_cls: 0.0303, loss_rpn_bbox: 0.0551, loss_cls: 0.2013, acc: 91.6514, loss_bbox: 0.3590, loss: 0.6525
2023-11-07 11:42:05,366 - mmdet - INFO - Epoch [2][1050/1286]	lr: 5.000e-03, eta: 1:07:32, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0066, loss_rpn_cls: 0.0274, loss_rpn_bbox: 0.0513, loss_cls: 0.1985, acc: 91.9238, loss_bbox: 0.3523, loss: 0.6360
2023-11-07 11:42:20,966 - mmdet - INFO - Epoch [2][1100/1286]	lr: 5.000e-03, eta: 1:07:18, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0063, loss_rpn_cls: 0.0290, loss_rpn_bbox: 0.0582, loss_cls: 0.2056, acc: 91.4697, loss_bbox: 0.3709, loss: 0.6700
2023-11-07 11:42:36,482 - mmdet - INFO - Epoch [2][1150/1286]	lr: 5.000e-03, eta: 1:07:02, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0063, loss_rpn_cls: 0.0263, loss_rpn_bbox: 0.0498, loss_cls: 0.1932, acc: 92.0791, loss_bbox: 0.3475, loss: 0.6231
2023-11-07 11:42:52,032 - mmdet - INFO - Epoch [2][1200/1286]	lr: 5.000e-03, eta: 1:06:47, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0069, loss_rpn_cls: 0.0267, loss_rpn_bbox: 0.0536, loss_cls: 0.2057, acc: 91.6475, loss_bbox: 0.3809, loss: 0.6738
2023-11-07 11:43:07,540 - mmdet - INFO - Epoch [2][1250/1286]	lr: 5.000e-03, eta: 1:06:32, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0062, loss_rpn_cls: 0.0259, loss_rpn_bbox: 0.0528, loss_cls: 0.2058, acc: 91.4346, loss_bbox: 0.3813, loss: 0.6720
2023-11-07 11:43:18,765 - mmdet - INFO - Saving checkpoint at 2 epochs
2023-11-07 11:43:57,945 - mmdet - INFO - Evaluating bbox...
2023-11-07 11:44:02,190 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.8830 | person   | 0.8150 | bicycle  | 0.6612 |
| dog      | 0.0000 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 11:44:02,191 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.5172 | person   | 0.3644 | bicycle  | 0.2515 |
| dog      | 0.0000 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 11:44:02,215 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 11:44:02,215 - mmdet - INFO - Epoch(val) [2][1013]	bbox_mAP: 0.2833, bbox_mAP_50: 0.5898, bbox_mAP_75: 0.2302, bbox_mAP_s: 0.2053, bbox_mAP_m: 0.3299, bbox_mAP_l: 0.4691, bbox_mAP_copypaste: 0.2833 0.5898 0.2302 0.2053 0.3299 0.4691
2023-11-07 11:44:19,941 - mmdet - INFO - Epoch [3][50/1286]	lr: 5.000e-03, eta: 1:05:22, time: 0.354, data_time: 0.049, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0234, loss_rpn_bbox: 0.0508, loss_cls: 0.1965, acc: 91.9229, loss_bbox: 0.3525, loss: 0.6287
2023-11-07 11:44:35,505 - mmdet - INFO - Epoch [3][100/1286]	lr: 5.000e-03, eta: 1:05:08, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0057, loss_rpn_cls: 0.0253, loss_rpn_bbox: 0.0535, loss_cls: 0.1996, acc: 91.6729, loss_bbox: 0.3720, loss: 0.6562
2023-11-07 11:44:51,018 - mmdet - INFO - Epoch [3][150/1286]	lr: 5.000e-03, eta: 1:04:53, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0065, loss_rpn_cls: 0.0249, loss_rpn_bbox: 0.0529, loss_cls: 0.1943, acc: 91.9697, loss_bbox: 0.3602, loss: 0.6388
2023-11-07 11:45:06,493 - mmdet - INFO - Epoch [3][200/1286]	lr: 5.000e-03, eta: 1:04:39, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0060, loss_rpn_cls: 0.0239, loss_rpn_bbox: 0.0483, loss_cls: 0.1847, acc: 92.5020, loss_bbox: 0.3457, loss: 0.6087
2023-11-07 11:45:21,992 - mmdet - INFO - Epoch [3][250/1286]	lr: 5.000e-03, eta: 1:04:24, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0058, loss_rpn_cls: 0.0230, loss_rpn_bbox: 0.0555, loss_cls: 0.1899, acc: 92.1582, loss_bbox: 0.3596, loss: 0.6337
2023-11-07 11:45:37,412 - mmdet - INFO - Epoch [3][300/1286]	lr: 5.000e-03, eta: 1:04:09, time: 0.308, data_time: 0.005, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0211, loss_rpn_bbox: 0.0430, loss_cls: 0.1729, acc: 92.9580, loss_bbox: 0.3263, loss: 0.5688
2023-11-07 11:45:52,922 - mmdet - INFO - Epoch [3][350/1286]	lr: 5.000e-03, eta: 1:03:55, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0060, loss_rpn_cls: 0.0228, loss_rpn_bbox: 0.0504, loss_cls: 0.1864, acc: 92.3428, loss_bbox: 0.3536, loss: 0.6192
2023-11-07 11:46:08,532 - mmdet - INFO - Epoch [3][400/1286]	lr: 5.000e-03, eta: 1:03:41, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0058, loss_rpn_cls: 0.0234, loss_rpn_bbox: 0.0550, loss_cls: 0.1987, acc: 91.7373, loss_bbox: 0.3711, loss: 0.6540
2023-11-07 11:46:24,049 - mmdet - INFO - Epoch [3][450/1286]	lr: 5.000e-03, eta: 1:03:26, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0056, loss_rpn_cls: 0.0216, loss_rpn_bbox: 0.0466, loss_cls: 0.1723, acc: 92.9600, loss_bbox: 0.3258, loss: 0.5720
2023-11-07 11:46:39,632 - mmdet - INFO - Epoch [3][500/1286]	lr: 5.000e-03, eta: 1:03:12, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0061, loss_rpn_cls: 0.0257, loss_rpn_bbox: 0.0494, loss_cls: 0.1894, acc: 92.1191, loss_bbox: 0.3555, loss: 0.6261
2023-11-07 11:46:55,172 - mmdet - INFO - Epoch [3][550/1286]	lr: 5.000e-03, eta: 1:02:57, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0058, loss_rpn_cls: 0.0222, loss_rpn_bbox: 0.0521, loss_cls: 0.1985, acc: 91.7842, loss_bbox: 0.3695, loss: 0.6481
2023-11-07 11:47:10,804 - mmdet - INFO - Epoch [3][600/1286]	lr: 5.000e-03, eta: 1:02:43, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0062, loss_rpn_cls: 0.0247, loss_rpn_bbox: 0.0547, loss_cls: 0.2105, acc: 91.3711, loss_bbox: 0.3768, loss: 0.6729
2023-11-07 11:47:26,379 - mmdet - INFO - Epoch [3][650/1286]	lr: 5.000e-03, eta: 1:02:28, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0062, loss_rpn_cls: 0.0231, loss_rpn_bbox: 0.0469, loss_cls: 0.1939, acc: 92.0518, loss_bbox: 0.3529, loss: 0.6231
2023-11-07 11:47:41,903 - mmdet - INFO - Epoch [3][700/1286]	lr: 5.000e-03, eta: 1:02:14, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0058, loss_rpn_cls: 0.0237, loss_rpn_bbox: 0.0513, loss_cls: 0.1857, acc: 92.3389, loss_bbox: 0.3512, loss: 0.6176
2023-11-07 11:47:57,353 - mmdet - INFO - Epoch [3][750/1286]	lr: 5.000e-03, eta: 1:01:59, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0054, loss_rpn_cls: 0.0206, loss_rpn_bbox: 0.0434, loss_cls: 0.1713, acc: 92.9297, loss_bbox: 0.3283, loss: 0.5690
2023-11-07 11:48:12,770 - mmdet - INFO - Epoch [3][800/1286]	lr: 5.000e-03, eta: 1:01:43, time: 0.308, data_time: 0.005, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0226, loss_rpn_bbox: 0.0418, loss_cls: 0.1641, acc: 93.3359, loss_bbox: 0.3064, loss: 0.5404
2023-11-07 11:48:28,337 - mmdet - INFO - Epoch [3][850/1286]	lr: 5.000e-03, eta: 1:01:29, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0053, loss_rpn_cls: 0.0245, loss_rpn_bbox: 0.0472, loss_cls: 0.1846, acc: 92.4756, loss_bbox: 0.3318, loss: 0.5934
2023-11-07 11:48:44,020 - mmdet - INFO - Epoch [3][900/1286]	lr: 5.000e-03, eta: 1:01:15, time: 0.314, data_time: 0.005, memory: 5972, mask_loss: 0.0072, loss_rpn_cls: 0.0271, loss_rpn_bbox: 0.0595, loss_cls: 0.2017, acc: 91.5840, loss_bbox: 0.3724, loss: 0.6680
2023-11-07 11:48:59,580 - mmdet - INFO - Epoch [3][950/1286]	lr: 5.000e-03, eta: 1:01:00, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0058, loss_rpn_cls: 0.0199, loss_rpn_bbox: 0.0459, loss_cls: 0.1780, acc: 92.5703, loss_bbox: 0.3330, loss: 0.5826
2023-11-07 11:49:15,289 - mmdet - INFO - Epoch [3][1000/1286]	lr: 5.000e-03, eta: 1:00:46, time: 0.314, data_time: 0.005, memory: 5972, mask_loss: 0.0060, loss_rpn_cls: 0.0267, loss_rpn_bbox: 0.0611, loss_cls: 0.2080, acc: 91.3691, loss_bbox: 0.3789, loss: 0.6806
2023-11-07 11:49:30,881 - mmdet - INFO - Epoch [3][1050/1286]	lr: 5.000e-03, eta: 1:00:31, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0061, loss_rpn_cls: 0.0212, loss_rpn_bbox: 0.0556, loss_cls: 0.1998, acc: 91.7383, loss_bbox: 0.3654, loss: 0.6481
2023-11-07 11:49:46,432 - mmdet - INFO - Epoch [3][1100/1286]	lr: 5.000e-03, eta: 1:00:16, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0059, loss_rpn_cls: 0.0209, loss_rpn_bbox: 0.0500, loss_cls: 0.1806, acc: 92.5488, loss_bbox: 0.3332, loss: 0.5906
2023-11-07 11:50:01,998 - mmdet - INFO - Epoch [3][1150/1286]	lr: 5.000e-03, eta: 1:00:01, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0054, loss_rpn_cls: 0.0228, loss_rpn_bbox: 0.0513, loss_cls: 0.1868, acc: 92.1943, loss_bbox: 0.3526, loss: 0.6189
2023-11-07 11:50:17,534 - mmdet - INFO - Epoch [3][1200/1286]	lr: 5.000e-03, eta: 0:59:47, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0059, loss_rpn_cls: 0.0250, loss_rpn_bbox: 0.0542, loss_cls: 0.1871, acc: 92.2529, loss_bbox: 0.3358, loss: 0.6079
2023-11-07 11:50:33,107 - mmdet - INFO - Epoch [3][1250/1286]	lr: 5.000e-03, eta: 0:59:32, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0054, loss_rpn_cls: 0.0229, loss_rpn_bbox: 0.0514, loss_cls: 0.1935, acc: 92.0439, loss_bbox: 0.3576, loss: 0.6307
2023-11-07 11:50:44,337 - mmdet - INFO - Saving checkpoint at 3 epochs
2023-11-07 11:51:23,728 - mmdet - INFO - Evaluating bbox...
2023-11-07 11:51:27,502 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.8989 | person   | 0.8348 | bicycle  | 0.7109 |
| dog      | 0.0898 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 11:51:27,502 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.5385 | person   | 0.3963 | bicycle  | 0.2492 |
| dog      | 0.0349 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 11:51:27,526 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 11:51:27,527 - mmdet - INFO - Epoch(val) [3][1013]	bbox_mAP: 0.3047, bbox_mAP_50: 0.6336, bbox_mAP_75: 0.2434, bbox_mAP_s: 0.2251, bbox_mAP_m: 0.3517, bbox_mAP_l: 0.4974, bbox_mAP_copypaste: 0.3047 0.6336 0.2434 0.2251 0.3517 0.4974
2023-11-07 11:51:45,315 - mmdet - INFO - Epoch [4][50/1286]	lr: 5.000e-03, eta: 0:58:40, time: 0.356, data_time: 0.049, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0194, loss_rpn_bbox: 0.0484, loss_cls: 0.1830, acc: 92.4336, loss_bbox: 0.3457, loss: 0.6015
2023-11-07 11:52:00,866 - mmdet - INFO - Epoch [4][100/1286]	lr: 5.000e-03, eta: 0:58:25, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0052, loss_rpn_cls: 0.0191, loss_rpn_bbox: 0.0451, loss_cls: 0.1708, acc: 92.8789, loss_bbox: 0.3321, loss: 0.5723
2023-11-07 11:52:16,459 - mmdet - INFO - Epoch [4][150/1286]	lr: 5.000e-03, eta: 0:58:11, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0226, loss_rpn_bbox: 0.0548, loss_cls: 0.1899, acc: 92.0596, loss_bbox: 0.3528, loss: 0.6258
2023-11-07 11:52:32,046 - mmdet - INFO - Epoch [4][200/1286]	lr: 5.000e-03, eta: 0:57:56, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0053, loss_rpn_cls: 0.0214, loss_rpn_bbox: 0.0520, loss_cls: 0.1955, acc: 92.0254, loss_bbox: 0.3610, loss: 0.6353
2023-11-07 11:52:47,565 - mmdet - INFO - Epoch [4][250/1286]	lr: 5.000e-03, eta: 0:57:42, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0054, loss_rpn_cls: 0.0187, loss_rpn_bbox: 0.0457, loss_cls: 0.1801, acc: 92.6309, loss_bbox: 0.3483, loss: 0.5982
2023-11-07 11:53:03,118 - mmdet - INFO - Epoch [4][300/1286]	lr: 5.000e-03, eta: 0:57:27, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0054, loss_rpn_cls: 0.0205, loss_rpn_bbox: 0.0472, loss_cls: 0.1750, acc: 92.8721, loss_bbox: 0.3278, loss: 0.5760
2023-11-07 11:53:18,665 - mmdet - INFO - Epoch [4][350/1286]	lr: 5.000e-03, eta: 0:57:13, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0063, loss_rpn_cls: 0.0207, loss_rpn_bbox: 0.0444, loss_cls: 0.1698, acc: 92.9902, loss_bbox: 0.3268, loss: 0.5679
2023-11-07 11:53:34,165 - mmdet - INFO - Epoch [4][400/1286]	lr: 5.000e-03, eta: 0:56:58, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0201, loss_rpn_bbox: 0.0429, loss_cls: 0.1603, acc: 93.3848, loss_bbox: 0.3129, loss: 0.5410
2023-11-07 11:53:49,772 - mmdet - INFO - Epoch [4][450/1286]	lr: 5.000e-03, eta: 0:56:43, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0203, loss_rpn_bbox: 0.0527, loss_cls: 0.1807, acc: 92.4023, loss_bbox: 0.3453, loss: 0.6045
2023-11-07 11:54:05,289 - mmdet - INFO - Epoch [4][500/1286]	lr: 5.000e-03, eta: 0:56:29, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0052, loss_rpn_cls: 0.0173, loss_rpn_bbox: 0.0480, loss_cls: 0.1760, acc: 92.6543, loss_bbox: 0.3437, loss: 0.5902
2023-11-07 11:54:20,756 - mmdet - INFO - Epoch [4][550/1286]	lr: 5.000e-03, eta: 0:56:14, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0054, loss_rpn_cls: 0.0249, loss_rpn_bbox: 0.0440, loss_cls: 0.1669, acc: 93.1211, loss_bbox: 0.3150, loss: 0.5562
2023-11-07 11:54:36,289 - mmdet - INFO - Epoch [4][600/1286]	lr: 5.000e-03, eta: 0:55:59, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0208, loss_rpn_bbox: 0.0450, loss_cls: 0.1748, acc: 92.6729, loss_bbox: 0.3377, loss: 0.5839
2023-11-07 11:54:51,888 - mmdet - INFO - Epoch [4][650/1286]	lr: 5.000e-03, eta: 0:55:44, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0053, loss_rpn_cls: 0.0200, loss_rpn_bbox: 0.0506, loss_cls: 0.1796, acc: 92.4531, loss_bbox: 0.3391, loss: 0.5944
2023-11-07 11:55:07,401 - mmdet - INFO - Epoch [4][700/1286]	lr: 5.000e-03, eta: 0:55:30, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0052, loss_rpn_cls: 0.0193, loss_rpn_bbox: 0.0462, loss_cls: 0.1789, acc: 92.4834, loss_bbox: 0.3413, loss: 0.5910
2023-11-07 11:55:22,967 - mmdet - INFO - Epoch [4][750/1286]	lr: 5.000e-03, eta: 0:55:15, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0220, loss_rpn_bbox: 0.0473, loss_cls: 0.1858, acc: 92.4248, loss_bbox: 0.3304, loss: 0.5903
2023-11-07 11:55:38,506 - mmdet - INFO - Epoch [4][800/1286]	lr: 5.000e-03, eta: 0:55:00, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0056, loss_rpn_cls: 0.0209, loss_rpn_bbox: 0.0470, loss_cls: 0.1724, acc: 92.9277, loss_bbox: 0.3282, loss: 0.5741
2023-11-07 11:55:54,077 - mmdet - INFO - Epoch [4][850/1286]	lr: 5.000e-03, eta: 0:54:45, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0056, loss_rpn_cls: 0.0205, loss_rpn_bbox: 0.0439, loss_cls: 0.1773, acc: 92.7461, loss_bbox: 0.3349, loss: 0.5822
2023-11-07 11:56:09,696 - mmdet - INFO - Epoch [4][900/1286]	lr: 5.000e-03, eta: 0:54:31, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0057, loss_rpn_cls: 0.0223, loss_rpn_bbox: 0.0498, loss_cls: 0.1773, acc: 92.6025, loss_bbox: 0.3405, loss: 0.5955
2023-11-07 11:56:25,257 - mmdet - INFO - Epoch [4][950/1286]	lr: 5.000e-03, eta: 0:54:16, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0051, loss_rpn_cls: 0.0229, loss_rpn_bbox: 0.0474, loss_cls: 0.1817, acc: 92.5898, loss_bbox: 0.3420, loss: 0.5990
2023-11-07 11:56:40,835 - mmdet - INFO - Epoch [4][1000/1286]	lr: 5.000e-03, eta: 0:54:01, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0051, loss_rpn_cls: 0.0161, loss_rpn_bbox: 0.0442, loss_cls: 0.1633, acc: 93.1689, loss_bbox: 0.3137, loss: 0.5424
2023-11-07 11:56:56,385 - mmdet - INFO - Epoch [4][1050/1286]	lr: 5.000e-03, eta: 0:53:46, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0047, loss_rpn_cls: 0.0197, loss_rpn_bbox: 0.0445, loss_cls: 0.1636, acc: 93.1797, loss_bbox: 0.3236, loss: 0.5561
2023-11-07 11:57:11,931 - mmdet - INFO - Epoch [4][1100/1286]	lr: 5.000e-03, eta: 0:53:31, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0053, loss_rpn_cls: 0.0195, loss_rpn_bbox: 0.0494, loss_cls: 0.1734, acc: 92.6943, loss_bbox: 0.3374, loss: 0.5850
2023-11-07 11:57:27,461 - mmdet - INFO - Epoch [4][1150/1286]	lr: 5.000e-03, eta: 0:53:16, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0054, loss_rpn_cls: 0.0199, loss_rpn_bbox: 0.0457, loss_cls: 0.1745, acc: 92.7549, loss_bbox: 0.3315, loss: 0.5770
2023-11-07 11:57:43,094 - mmdet - INFO - Epoch [4][1200/1286]	lr: 5.000e-03, eta: 0:53:02, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0197, loss_rpn_bbox: 0.0504, loss_cls: 0.1807, acc: 92.4814, loss_bbox: 0.3406, loss: 0.5969
2023-11-07 11:57:58,654 - mmdet - INFO - Epoch [4][1250/1286]	lr: 5.000e-03, eta: 0:52:47, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0169, loss_rpn_bbox: 0.0441, loss_cls: 0.1614, acc: 93.2969, loss_bbox: 0.3124, loss: 0.5399
2023-11-07 11:58:09,914 - mmdet - INFO - Saving checkpoint at 4 epochs
2023-11-07 11:58:48,824 - mmdet - INFO - Evaluating bbox...
2023-11-07 11:58:52,446 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.9177 | person   | 0.8569 | bicycle  | 0.7760 |
| dog      | 0.2486 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 11:58:52,447 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.5604 | person   | 0.3987 | bicycle  | 0.3371 |
| dog      | 0.1364 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 11:58:52,468 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 11:58:52,468 - mmdet - INFO - Epoch(val) [4][1013]	bbox_mAP: 0.3581, bbox_mAP_50: 0.6998, bbox_mAP_75: 0.3281, bbox_mAP_s: 0.2768, bbox_mAP_m: 0.4072, bbox_mAP_l: 0.5776, bbox_mAP_copypaste: 0.3581 0.6998 0.3281 0.2768 0.4072 0.5776
2023-11-07 11:59:10,208 - mmdet - INFO - Epoch [5][50/1286]	lr: 5.000e-03, eta: 0:52:03, time: 0.355, data_time: 0.049, memory: 5972, mask_loss: 0.0049, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0405, loss_cls: 0.1533, acc: 93.6387, loss_bbox: 0.3091, loss: 0.5223
2023-11-07 11:59:25,799 - mmdet - INFO - Epoch [5][100/1286]	lr: 5.000e-03, eta: 0:51:49, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0047, loss_rpn_cls: 0.0183, loss_rpn_bbox: 0.0479, loss_cls: 0.1763, acc: 92.6973, loss_bbox: 0.3308, loss: 0.5780
2023-11-07 11:59:41,289 - mmdet - INFO - Epoch [5][150/1286]	lr: 5.000e-03, eta: 0:51:34, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0165, loss_rpn_bbox: 0.0451, loss_cls: 0.1548, acc: 93.6816, loss_bbox: 0.2973, loss: 0.5184
2023-11-07 11:59:56,898 - mmdet - INFO - Epoch [5][200/1286]	lr: 5.000e-03, eta: 0:51:19, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0058, loss_rpn_cls: 0.0194, loss_rpn_bbox: 0.0498, loss_cls: 0.1758, acc: 92.6709, loss_bbox: 0.3377, loss: 0.5885
2023-11-07 12:00:12,438 - mmdet - INFO - Epoch [5][250/1286]	lr: 5.000e-03, eta: 0:51:05, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0181, loss_rpn_bbox: 0.0455, loss_cls: 0.1630, acc: 93.1816, loss_bbox: 0.3185, loss: 0.5502
2023-11-07 12:00:27,952 - mmdet - INFO - Epoch [5][300/1286]	lr: 5.000e-03, eta: 0:50:50, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0178, loss_rpn_bbox: 0.0468, loss_cls: 0.1653, acc: 93.1230, loss_bbox: 0.3267, loss: 0.5613
2023-11-07 12:00:43,492 - mmdet - INFO - Epoch [5][350/1286]	lr: 5.000e-03, eta: 0:50:35, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0162, loss_rpn_bbox: 0.0445, loss_cls: 0.1668, acc: 93.0791, loss_bbox: 0.3301, loss: 0.5621
2023-11-07 12:00:59,012 - mmdet - INFO - Epoch [5][400/1286]	lr: 5.000e-03, eta: 0:50:20, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0049, loss_rpn_cls: 0.0173, loss_rpn_bbox: 0.0465, loss_cls: 0.1622, acc: 93.1777, loss_bbox: 0.3214, loss: 0.5523
2023-11-07 12:01:14,594 - mmdet - INFO - Epoch [5][450/1286]	lr: 5.000e-03, eta: 0:50:05, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0195, loss_rpn_bbox: 0.0477, loss_cls: 0.1706, acc: 92.9404, loss_bbox: 0.3321, loss: 0.5754
2023-11-07 12:01:30,114 - mmdet - INFO - Epoch [5][500/1286]	lr: 5.000e-03, eta: 0:49:51, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0047, loss_rpn_cls: 0.0182, loss_rpn_bbox: 0.0443, loss_cls: 0.1618, acc: 93.3174, loss_bbox: 0.3150, loss: 0.5441
2023-11-07 12:01:45,556 - mmdet - INFO - Epoch [5][550/1286]	lr: 5.000e-03, eta: 0:49:36, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0166, loss_rpn_bbox: 0.0414, loss_cls: 0.1531, acc: 93.6572, loss_bbox: 0.3046, loss: 0.5212
2023-11-07 12:02:01,011 - mmdet - INFO - Epoch [5][600/1286]	lr: 5.000e-03, eta: 0:49:21, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0396, loss_cls: 0.1529, acc: 93.6357, loss_bbox: 0.3019, loss: 0.5138
2023-11-07 12:02:16,592 - mmdet - INFO - Epoch [5][650/1286]	lr: 5.000e-03, eta: 0:49:06, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0167, loss_rpn_bbox: 0.0479, loss_cls: 0.1797, acc: 92.4951, loss_bbox: 0.3453, loss: 0.5946
2023-11-07 12:02:32,086 - mmdet - INFO - Epoch [5][700/1286]	lr: 5.000e-03, eta: 0:48:51, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0054, loss_rpn_cls: 0.0155, loss_rpn_bbox: 0.0445, loss_cls: 0.1614, acc: 93.2373, loss_bbox: 0.3202, loss: 0.5469
2023-11-07 12:02:47,717 - mmdet - INFO - Epoch [5][750/1286]	lr: 5.000e-03, eta: 0:48:36, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0049, loss_rpn_cls: 0.0170, loss_rpn_bbox: 0.0499, loss_cls: 0.1722, acc: 92.7803, loss_bbox: 0.3383, loss: 0.5823
2023-11-07 12:03:03,145 - mmdet - INFO - Epoch [5][800/1286]	lr: 5.000e-03, eta: 0:48:21, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0043, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0383, loss_cls: 0.1459, acc: 93.9629, loss_bbox: 0.2991, loss: 0.5027
2023-11-07 12:03:18,655 - mmdet - INFO - Epoch [5][850/1286]	lr: 5.000e-03, eta: 0:48:06, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0053, loss_rpn_cls: 0.0181, loss_rpn_bbox: 0.0487, loss_cls: 0.1677, acc: 92.9746, loss_bbox: 0.3253, loss: 0.5650
2023-11-07 12:03:34,145 - mmdet - INFO - Epoch [5][900/1286]	lr: 5.000e-03, eta: 0:47:51, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0182, loss_rpn_bbox: 0.0451, loss_cls: 0.1642, acc: 93.1699, loss_bbox: 0.3122, loss: 0.5440
2023-11-07 12:03:49,692 - mmdet - INFO - Epoch [5][950/1286]	lr: 5.000e-03, eta: 0:47:36, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0180, loss_rpn_bbox: 0.0441, loss_cls: 0.1715, acc: 93.0137, loss_bbox: 0.3288, loss: 0.5673
2023-11-07 12:04:05,194 - mmdet - INFO - Epoch [5][1000/1286]	lr: 5.000e-03, eta: 0:47:21, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0052, loss_rpn_cls: 0.0152, loss_rpn_bbox: 0.0473, loss_cls: 0.1701, acc: 93.0186, loss_bbox: 0.3346, loss: 0.5725
2023-11-07 12:04:20,632 - mmdet - INFO - Epoch [5][1050/1286]	lr: 5.000e-03, eta: 0:47:06, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0160, loss_rpn_bbox: 0.0396, loss_cls: 0.1599, acc: 93.3301, loss_bbox: 0.3069, loss: 0.5270
2023-11-07 12:04:36,235 - mmdet - INFO - Epoch [5][1100/1286]	lr: 5.000e-03, eta: 0:46:51, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0055, loss_rpn_cls: 0.0184, loss_rpn_bbox: 0.0469, loss_cls: 0.1713, acc: 92.9238, loss_bbox: 0.3329, loss: 0.5750
2023-11-07 12:04:51,756 - mmdet - INFO - Epoch [5][1150/1286]	lr: 5.000e-03, eta: 0:46:36, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0049, loss_rpn_cls: 0.0176, loss_rpn_bbox: 0.0454, loss_cls: 0.1600, acc: 93.1865, loss_bbox: 0.3203, loss: 0.5482
2023-11-07 12:05:07,329 - mmdet - INFO - Epoch [5][1200/1286]	lr: 5.000e-03, eta: 0:46:21, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0051, loss_rpn_cls: 0.0180, loss_rpn_bbox: 0.0470, loss_cls: 0.1785, acc: 92.6748, loss_bbox: 0.3383, loss: 0.5870
2023-11-07 12:05:22,886 - mmdet - INFO - Epoch [5][1250/1286]	lr: 5.000e-03, eta: 0:46:06, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0053, loss_rpn_cls: 0.0184, loss_rpn_bbox: 0.0458, loss_cls: 0.1615, acc: 93.3271, loss_bbox: 0.3285, loss: 0.5596
2023-11-07 12:05:34,060 - mmdet - INFO - Saving checkpoint at 5 epochs
2023-11-07 12:06:13,040 - mmdet - INFO - Evaluating bbox...
2023-11-07 12:06:16,515 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.9263 | person   | 0.8722 | bicycle  | 0.7751 |
| dog      | 0.6116 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:06:16,515 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.5949 | person   | 0.4292 | bicycle  | 0.3142 |
| dog      | 0.1937 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:06:16,536 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 12:06:16,536 - mmdet - INFO - Epoch(val) [5][1013]	bbox_mAP: 0.3830, bbox_mAP_50: 0.7963, bbox_mAP_75: 0.3144, bbox_mAP_s: 0.3170, bbox_mAP_m: 0.4310, bbox_mAP_l: 0.6113, bbox_mAP_copypaste: 0.3830 0.7963 0.3144 0.3170 0.4310 0.6113
2023-11-07 12:06:34,166 - mmdet - INFO - Epoch [6][50/1286]	lr: 5.000e-03, eta: 0:45:28, time: 0.352, data_time: 0.049, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0136, loss_rpn_bbox: 0.0382, loss_cls: 0.1338, acc: 94.4717, loss_bbox: 0.2753, loss: 0.4654
2023-11-07 12:06:49,658 - mmdet - INFO - Epoch [6][100/1286]	lr: 5.000e-03, eta: 0:45:13, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0049, loss_rpn_cls: 0.0171, loss_rpn_bbox: 0.0439, loss_cls: 0.1576, acc: 93.2842, loss_bbox: 0.3120, loss: 0.5355
2023-11-07 12:07:05,157 - mmdet - INFO - Epoch [6][150/1286]	lr: 5.000e-03, eta: 0:44:58, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0049, loss_rpn_cls: 0.0150, loss_rpn_bbox: 0.0431, loss_cls: 0.1562, acc: 93.4717, loss_bbox: 0.3082, loss: 0.5273
2023-11-07 12:07:20,683 - mmdet - INFO - Epoch [6][200/1286]	lr: 5.000e-03, eta: 0:44:43, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0047, loss_rpn_cls: 0.0154, loss_rpn_bbox: 0.0438, loss_cls: 0.1634, acc: 93.1299, loss_bbox: 0.3236, loss: 0.5510
2023-11-07 12:07:36,211 - mmdet - INFO - Epoch [6][250/1286]	lr: 5.000e-03, eta: 0:44:29, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0051, loss_rpn_cls: 0.0149, loss_rpn_bbox: 0.0436, loss_cls: 0.1591, acc: 93.3291, loss_bbox: 0.3099, loss: 0.5326
2023-11-07 12:07:51,755 - mmdet - INFO - Epoch [6][300/1286]	lr: 5.000e-03, eta: 0:44:14, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0049, loss_rpn_cls: 0.0183, loss_rpn_bbox: 0.0435, loss_cls: 0.1606, acc: 93.3330, loss_bbox: 0.3165, loss: 0.5438
2023-11-07 12:08:07,285 - mmdet - INFO - Epoch [6][350/1286]	lr: 5.000e-03, eta: 0:43:59, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0183, loss_rpn_bbox: 0.0436, loss_cls: 0.1624, acc: 93.3135, loss_bbox: 0.3055, loss: 0.5343
2023-11-07 12:08:22,888 - mmdet - INFO - Epoch [6][400/1286]	lr: 5.000e-03, eta: 0:43:44, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0165, loss_rpn_bbox: 0.0483, loss_cls: 0.1696, acc: 92.7793, loss_bbox: 0.3380, loss: 0.5775
2023-11-07 12:08:38,377 - mmdet - INFO - Epoch [6][450/1286]	lr: 5.000e-03, eta: 0:43:29, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0158, loss_rpn_bbox: 0.0446, loss_cls: 0.1536, acc: 93.4922, loss_bbox: 0.3041, loss: 0.5227
2023-11-07 12:08:53,866 - mmdet - INFO - Epoch [6][500/1286]	lr: 5.000e-03, eta: 0:43:14, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0168, loss_rpn_bbox: 0.0410, loss_cls: 0.1509, acc: 93.7246, loss_bbox: 0.3038, loss: 0.5169
2023-11-07 12:09:09,372 - mmdet - INFO - Epoch [6][550/1286]	lr: 5.000e-03, eta: 0:42:59, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0041, loss_rpn_cls: 0.0146, loss_rpn_bbox: 0.0394, loss_cls: 0.1471, acc: 93.7871, loss_bbox: 0.2842, loss: 0.4893
2023-11-07 12:09:24,911 - mmdet - INFO - Epoch [6][600/1286]	lr: 5.000e-03, eta: 0:42:44, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0152, loss_rpn_bbox: 0.0437, loss_cls: 0.1512, acc: 93.6934, loss_bbox: 0.3084, loss: 0.5230
2023-11-07 12:09:40,444 - mmdet - INFO - Epoch [6][650/1286]	lr: 5.000e-03, eta: 0:42:29, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0139, loss_rpn_bbox: 0.0418, loss_cls: 0.1486, acc: 93.7295, loss_bbox: 0.3033, loss: 0.5121
2023-11-07 12:09:55,930 - mmdet - INFO - Epoch [6][700/1286]	lr: 5.000e-03, eta: 0:42:14, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0149, loss_rpn_bbox: 0.0438, loss_cls: 0.1542, acc: 93.4873, loss_bbox: 0.3061, loss: 0.5236
2023-11-07 12:10:11,419 - mmdet - INFO - Epoch [6][750/1286]	lr: 5.000e-03, eta: 0:41:59, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0138, loss_rpn_bbox: 0.0441, loss_cls: 0.1599, acc: 93.3477, loss_bbox: 0.3177, loss: 0.5404
2023-11-07 12:10:26,953 - mmdet - INFO - Epoch [6][800/1286]	lr: 5.000e-03, eta: 0:41:44, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0058, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0423, loss_cls: 0.1540, acc: 93.6318, loss_bbox: 0.3005, loss: 0.5170
2023-11-07 12:10:42,492 - mmdet - INFO - Epoch [6][850/1286]	lr: 5.000e-03, eta: 0:41:29, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0053, loss_rpn_cls: 0.0156, loss_rpn_bbox: 0.0463, loss_cls: 0.1663, acc: 93.0410, loss_bbox: 0.3313, loss: 0.5647
2023-11-07 12:10:57,943 - mmdet - INFO - Epoch [6][900/1286]	lr: 5.000e-03, eta: 0:41:14, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0151, loss_rpn_bbox: 0.0437, loss_cls: 0.1544, acc: 93.4697, loss_bbox: 0.3187, loss: 0.5365
2023-11-07 12:11:13,491 - mmdet - INFO - Epoch [6][950/1286]	lr: 5.000e-03, eta: 0:40:59, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0164, loss_rpn_bbox: 0.0463, loss_cls: 0.1550, acc: 93.5283, loss_bbox: 0.3168, loss: 0.5396
2023-11-07 12:11:28,953 - mmdet - INFO - Epoch [6][1000/1286]	lr: 5.000e-03, eta: 0:40:44, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0177, loss_rpn_bbox: 0.0433, loss_cls: 0.1558, acc: 93.4443, loss_bbox: 0.3081, loss: 0.5299
2023-11-07 12:11:44,369 - mmdet - INFO - Epoch [6][1050/1286]	lr: 5.000e-03, eta: 0:40:29, time: 0.308, data_time: 0.005, memory: 5972, mask_loss: 0.0043, loss_rpn_cls: 0.0146, loss_rpn_bbox: 0.0381, loss_cls: 0.1351, acc: 94.2812, loss_bbox: 0.2795, loss: 0.4716
2023-11-07 12:11:59,921 - mmdet - INFO - Epoch [6][1100/1286]	lr: 5.000e-03, eta: 0:40:14, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0050, loss_rpn_cls: 0.0148, loss_rpn_bbox: 0.0432, loss_cls: 0.1662, acc: 93.0732, loss_bbox: 0.3232, loss: 0.5525
2023-11-07 12:12:15,455 - mmdet - INFO - Epoch [6][1150/1286]	lr: 5.000e-03, eta: 0:39:59, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0147, loss_rpn_bbox: 0.0428, loss_cls: 0.1523, acc: 93.5186, loss_bbox: 0.3143, loss: 0.5285
2023-11-07 12:12:30,980 - mmdet - INFO - Epoch [6][1200/1286]	lr: 5.000e-03, eta: 0:39:44, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0168, loss_rpn_bbox: 0.0459, loss_cls: 0.1596, acc: 93.2988, loss_bbox: 0.3161, loss: 0.5433
2023-11-07 12:12:46,499 - mmdet - INFO - Epoch [6][1250/1286]	lr: 5.000e-03, eta: 0:39:29, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0163, loss_rpn_bbox: 0.0466, loss_cls: 0.1515, acc: 93.5781, loss_bbox: 0.3015, loss: 0.5207
2023-11-07 12:12:57,739 - mmdet - INFO - Saving checkpoint at 6 epochs
2023-11-07 12:13:36,996 - mmdet - INFO - Evaluating bbox...
2023-11-07 12:13:39,860 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.9307 | person   | 0.8763 | bicycle  | 0.8095 |
| dog      | 0.7817 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:13:39,860 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.5658 | person   | 0.4306 | bicycle  | 0.3565 |
| dog      | 0.3120 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:13:39,878 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 12:13:39,878 - mmdet - INFO - Epoch(val) [6][1013]	bbox_mAP: 0.4162, bbox_mAP_50: 0.8496, bbox_mAP_75: 0.3307, bbox_mAP_s: 0.2909, bbox_mAP_m: 0.4787, bbox_mAP_l: 0.6117, bbox_mAP_copypaste: 0.4162 0.8496 0.3307 0.2909 0.4787 0.6117
2023-11-07 12:13:57,604 - mmdet - INFO - Epoch [7][50/1286]	lr: 5.000e-03, eta: 0:38:54, time: 0.354, data_time: 0.049, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0120, loss_rpn_bbox: 0.0406, loss_cls: 0.1452, acc: 93.8418, loss_bbox: 0.3005, loss: 0.5022
2023-11-07 12:14:13,060 - mmdet - INFO - Epoch [7][100/1286]	lr: 5.000e-03, eta: 0:38:39, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0138, loss_rpn_bbox: 0.0415, loss_cls: 0.1386, acc: 94.2070, loss_bbox: 0.2898, loss: 0.4876
2023-11-07 12:14:28,582 - mmdet - INFO - Epoch [7][150/1286]	lr: 5.000e-03, eta: 0:38:24, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0160, loss_rpn_bbox: 0.0453, loss_cls: 0.1608, acc: 93.1553, loss_bbox: 0.3197, loss: 0.5464
2023-11-07 12:14:44,076 - mmdet - INFO - Epoch [7][200/1286]	lr: 5.000e-03, eta: 0:38:09, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0047, loss_rpn_cls: 0.0151, loss_rpn_bbox: 0.0457, loss_cls: 0.1508, acc: 93.6445, loss_bbox: 0.3064, loss: 0.5226
2023-11-07 12:14:59,587 - mmdet - INFO - Epoch [7][250/1286]	lr: 5.000e-03, eta: 0:37:54, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0047, loss_rpn_cls: 0.0159, loss_rpn_bbox: 0.0421, loss_cls: 0.1524, acc: 93.5801, loss_bbox: 0.3157, loss: 0.5309
2023-11-07 12:15:15,120 - mmdet - INFO - Epoch [7][300/1286]	lr: 5.000e-03, eta: 0:37:39, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0051, loss_rpn_cls: 0.0137, loss_rpn_bbox: 0.0416, loss_cls: 0.1552, acc: 93.5430, loss_bbox: 0.3157, loss: 0.5313
2023-11-07 12:15:30,635 - mmdet - INFO - Epoch [7][350/1286]	lr: 5.000e-03, eta: 0:37:24, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0129, loss_rpn_bbox: 0.0417, loss_cls: 0.1480, acc: 93.7480, loss_bbox: 0.2993, loss: 0.5065
2023-11-07 12:15:46,187 - mmdet - INFO - Epoch [7][400/1286]	lr: 5.000e-03, eta: 0:37:09, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0047, loss_rpn_cls: 0.0159, loss_rpn_bbox: 0.0430, loss_cls: 0.1523, acc: 93.6562, loss_bbox: 0.3053, loss: 0.5212
2023-11-07 12:16:01,578 - mmdet - INFO - Epoch [7][450/1286]	lr: 5.000e-03, eta: 0:36:54, time: 0.308, data_time: 0.005, memory: 5972, mask_loss: 0.0043, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0368, loss_cls: 0.1277, acc: 94.6768, loss_bbox: 0.2707, loss: 0.4527
2023-11-07 12:16:17,079 - mmdet - INFO - Epoch [7][500/1286]	lr: 5.000e-03, eta: 0:36:39, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0138, loss_rpn_bbox: 0.0453, loss_cls: 0.1521, acc: 93.5801, loss_bbox: 0.3073, loss: 0.5230
2023-11-07 12:16:32,566 - mmdet - INFO - Epoch [7][550/1286]	lr: 5.000e-03, eta: 0:36:24, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0155, loss_rpn_bbox: 0.0397, loss_cls: 0.1505, acc: 93.6260, loss_bbox: 0.3056, loss: 0.5153
2023-11-07 12:16:48,079 - mmdet - INFO - Epoch [7][600/1286]	lr: 5.000e-03, eta: 0:36:09, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0042, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0414, loss_cls: 0.1465, acc: 93.7598, loss_bbox: 0.3057, loss: 0.5104
2023-11-07 12:17:03,582 - mmdet - INFO - Epoch [7][650/1286]	lr: 5.000e-03, eta: 0:35:54, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0136, loss_rpn_bbox: 0.0387, loss_cls: 0.1493, acc: 93.6855, loss_bbox: 0.3037, loss: 0.5097
2023-11-07 12:17:19,001 - mmdet - INFO - Epoch [7][700/1286]	lr: 5.000e-03, eta: 0:35:39, time: 0.308, data_time: 0.005, memory: 5972, mask_loss: 0.0042, loss_rpn_cls: 0.0142, loss_rpn_bbox: 0.0396, loss_cls: 0.1384, acc: 94.3027, loss_bbox: 0.2894, loss: 0.4858
2023-11-07 12:17:34,541 - mmdet - INFO - Epoch [7][750/1286]	lr: 5.000e-03, eta: 0:35:24, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0157, loss_rpn_bbox: 0.0471, loss_cls: 0.1686, acc: 92.8164, loss_bbox: 0.3295, loss: 0.5657
2023-11-07 12:17:50,063 - mmdet - INFO - Epoch [7][800/1286]	lr: 5.000e-03, eta: 0:35:09, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0142, loss_rpn_bbox: 0.0429, loss_cls: 0.1522, acc: 93.6436, loss_bbox: 0.3002, loss: 0.5143
2023-11-07 12:18:05,540 - mmdet - INFO - Epoch [7][850/1286]	lr: 5.000e-03, eta: 0:34:54, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0162, loss_rpn_bbox: 0.0443, loss_cls: 0.1494, acc: 93.8145, loss_bbox: 0.2917, loss: 0.5062
2023-11-07 12:18:21,008 - mmdet - INFO - Epoch [7][900/1286]	lr: 5.000e-03, eta: 0:34:39, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0042, loss_rpn_cls: 0.0145, loss_rpn_bbox: 0.0434, loss_cls: 0.1519, acc: 93.5576, loss_bbox: 0.3058, loss: 0.5198
2023-11-07 12:18:36,450 - mmdet - INFO - Epoch [7][950/1286]	lr: 5.000e-03, eta: 0:34:24, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0125, loss_rpn_bbox: 0.0380, loss_cls: 0.1442, acc: 94.0459, loss_bbox: 0.2863, loss: 0.4856
2023-11-07 12:18:51,900 - mmdet - INFO - Epoch [7][1000/1286]	lr: 5.000e-03, eta: 0:34:09, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0123, loss_rpn_bbox: 0.0391, loss_cls: 0.1493, acc: 93.6865, loss_bbox: 0.3036, loss: 0.5087
2023-11-07 12:19:07,313 - mmdet - INFO - Epoch [7][1050/1286]	lr: 5.000e-03, eta: 0:33:54, time: 0.308, data_time: 0.005, memory: 5972, mask_loss: 0.0049, loss_rpn_cls: 0.0151, loss_rpn_bbox: 0.0375, loss_cls: 0.1436, acc: 94.1729, loss_bbox: 0.2752, loss: 0.4764
2023-11-07 12:19:22,804 - mmdet - INFO - Epoch [7][1100/1286]	lr: 5.000e-03, eta: 0:33:38, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0127, loss_rpn_bbox: 0.0447, loss_cls: 0.1519, acc: 93.6045, loss_bbox: 0.3024, loss: 0.5165
2023-11-07 12:19:38,310 - mmdet - INFO - Epoch [7][1150/1286]	lr: 5.000e-03, eta: 0:33:23, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0052, loss_rpn_cls: 0.0142, loss_rpn_bbox: 0.0403, loss_cls: 0.1488, acc: 93.8271, loss_bbox: 0.2964, loss: 0.5050
2023-11-07 12:19:53,794 - mmdet - INFO - Epoch [7][1200/1286]	lr: 5.000e-03, eta: 0:33:08, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0141, loss_rpn_bbox: 0.0432, loss_cls: 0.1530, acc: 93.5537, loss_bbox: 0.3052, loss: 0.5203
2023-11-07 12:20:09,271 - mmdet - INFO - Epoch [7][1250/1286]	lr: 5.000e-03, eta: 0:32:53, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0145, loss_rpn_bbox: 0.0429, loss_cls: 0.1587, acc: 93.3320, loss_bbox: 0.3121, loss: 0.5330
2023-11-07 12:20:20,436 - mmdet - INFO - Saving checkpoint at 7 epochs
2023-11-07 12:20:59,062 - mmdet - INFO - Evaluating bbox...
2023-11-07 12:21:01,888 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.9358 | person   | 0.9014 | bicycle  | 0.8468 |
| dog      | 0.6233 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:21:01,889 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.5687 | person   | 0.4598 | bicycle  | 0.3806 |
| dog      | 0.2438 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:21:01,906 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 12:21:01,906 - mmdet - INFO - Epoch(val) [7][1013]	bbox_mAP: 0.4133, bbox_mAP_50: 0.8268, bbox_mAP_75: 0.3274, bbox_mAP_s: 0.3357, bbox_mAP_m: 0.4753, bbox_mAP_l: 0.6108, bbox_mAP_copypaste: 0.4133 0.8268 0.3274 0.3357 0.4753 0.6108
2023-11-07 12:21:19,608 - mmdet - INFO - Epoch [8][50/1286]	lr: 5.000e-03, eta: 0:32:21, time: 0.354, data_time: 0.049, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0140, loss_rpn_bbox: 0.0444, loss_cls: 0.1476, acc: 93.7969, loss_bbox: 0.2985, loss: 0.5089
2023-11-07 12:21:35,112 - mmdet - INFO - Epoch [8][100/1286]	lr: 5.000e-03, eta: 0:32:06, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0416, loss_cls: 0.1405, acc: 94.1035, loss_bbox: 0.2913, loss: 0.4922
2023-11-07 12:21:50,547 - mmdet - INFO - Epoch [8][150/1286]	lr: 5.000e-03, eta: 0:31:51, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0418, loss_cls: 0.1402, acc: 94.0898, loss_bbox: 0.2856, loss: 0.4846
2023-11-07 12:22:06,005 - mmdet - INFO - Epoch [8][200/1286]	lr: 5.000e-03, eta: 0:31:36, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0048, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0386, loss_cls: 0.1296, acc: 94.6230, loss_bbox: 0.2811, loss: 0.4642
2023-11-07 12:22:21,469 - mmdet - INFO - Epoch [8][250/1286]	lr: 5.000e-03, eta: 0:31:21, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0041, loss_rpn_cls: 0.0132, loss_rpn_bbox: 0.0394, loss_cls: 0.1410, acc: 94.1523, loss_bbox: 0.2895, loss: 0.4874
2023-11-07 12:22:36,872 - mmdet - INFO - Epoch [8][300/1286]	lr: 5.000e-03, eta: 0:31:06, time: 0.308, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0123, loss_rpn_bbox: 0.0378, loss_cls: 0.1359, acc: 94.2930, loss_bbox: 0.2778, loss: 0.4678
2023-11-07 12:22:52,339 - mmdet - INFO - Epoch [8][350/1286]	lr: 5.000e-03, eta: 0:30:51, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0043, loss_rpn_cls: 0.0136, loss_rpn_bbox: 0.0444, loss_cls: 0.1449, acc: 93.8955, loss_bbox: 0.2990, loss: 0.5061
2023-11-07 12:23:07,784 - mmdet - INFO - Epoch [8][400/1286]	lr: 5.000e-03, eta: 0:30:35, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0051, loss_rpn_cls: 0.0152, loss_rpn_bbox: 0.0411, loss_cls: 0.1374, acc: 94.3213, loss_bbox: 0.2802, loss: 0.4790
2023-11-07 12:23:23,328 - mmdet - INFO - Epoch [8][450/1286]	lr: 5.000e-03, eta: 0:30:20, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0129, loss_rpn_bbox: 0.0476, loss_cls: 0.1437, acc: 93.9365, loss_bbox: 0.3025, loss: 0.5111
2023-11-07 12:23:38,801 - mmdet - INFO - Epoch [8][500/1286]	lr: 5.000e-03, eta: 0:30:05, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0047, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0400, loss_cls: 0.1404, acc: 94.0723, loss_bbox: 0.2881, loss: 0.4859
2023-11-07 12:23:54,381 - mmdet - INFO - Epoch [8][550/1286]	lr: 5.000e-03, eta: 0:29:50, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0047, loss_rpn_cls: 0.0166, loss_rpn_bbox: 0.0408, loss_cls: 0.1482, acc: 93.8672, loss_bbox: 0.3012, loss: 0.5115
2023-11-07 12:24:09,902 - mmdet - INFO - Epoch [8][600/1286]	lr: 5.000e-03, eta: 0:29:35, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0105, loss_rpn_bbox: 0.0360, loss_cls: 0.1282, acc: 94.6475, loss_bbox: 0.2705, loss: 0.4496
2023-11-07 12:24:25,402 - mmdet - INFO - Epoch [8][650/1286]	lr: 5.000e-03, eta: 0:29:20, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0043, loss_rpn_cls: 0.0108, loss_rpn_bbox: 0.0379, loss_cls: 0.1317, acc: 94.4355, loss_bbox: 0.2788, loss: 0.4635
2023-11-07 12:24:40,920 - mmdet - INFO - Epoch [8][700/1286]	lr: 5.000e-03, eta: 0:29:05, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0143, loss_rpn_bbox: 0.0403, loss_cls: 0.1400, acc: 94.1436, loss_bbox: 0.2895, loss: 0.4885
2023-11-07 12:24:56,414 - mmdet - INFO - Epoch [8][750/1286]	lr: 5.000e-03, eta: 0:28:50, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0049, loss_rpn_cls: 0.0123, loss_rpn_bbox: 0.0403, loss_cls: 0.1362, acc: 94.2783, loss_bbox: 0.2887, loss: 0.4823
2023-11-07 12:25:11,864 - mmdet - INFO - Epoch [8][800/1286]	lr: 5.000e-03, eta: 0:28:35, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0041, loss_rpn_cls: 0.0142, loss_rpn_bbox: 0.0391, loss_cls: 0.1388, acc: 94.1729, loss_bbox: 0.2886, loss: 0.4847
2023-11-07 12:25:27,340 - mmdet - INFO - Epoch [8][850/1286]	lr: 5.000e-03, eta: 0:28:20, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0041, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0375, loss_cls: 0.1339, acc: 94.3047, loss_bbox: 0.2799, loss: 0.4668
2023-11-07 12:25:42,836 - mmdet - INFO - Epoch [8][900/1286]	lr: 5.000e-03, eta: 0:28:05, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0042, loss_rpn_cls: 0.0115, loss_rpn_bbox: 0.0367, loss_cls: 0.1285, acc: 94.5820, loss_bbox: 0.2640, loss: 0.4450
2023-11-07 12:25:58,382 - mmdet - INFO - Epoch [8][950/1286]	lr: 5.000e-03, eta: 0:27:50, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0140, loss_rpn_bbox: 0.0434, loss_cls: 0.1522, acc: 93.5430, loss_bbox: 0.3005, loss: 0.5145
2023-11-07 12:26:13,968 - mmdet - INFO - Epoch [8][1000/1286]	lr: 5.000e-03, eta: 0:27:35, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0118, loss_rpn_bbox: 0.0404, loss_cls: 0.1492, acc: 93.8281, loss_bbox: 0.3037, loss: 0.5094
2023-11-07 12:26:29,529 - mmdet - INFO - Epoch [8][1050/1286]	lr: 5.000e-03, eta: 0:27:20, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0139, loss_rpn_bbox: 0.0396, loss_cls: 0.1397, acc: 94.1279, loss_bbox: 0.2816, loss: 0.4794
2023-11-07 12:26:45,098 - mmdet - INFO - Epoch [8][1100/1286]	lr: 5.000e-03, eta: 0:27:05, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0144, loss_rpn_bbox: 0.0461, loss_cls: 0.1554, acc: 93.2910, loss_bbox: 0.3119, loss: 0.5322
2023-11-07 12:27:00,744 - mmdet - INFO - Epoch [8][1150/1286]	lr: 5.000e-03, eta: 0:26:50, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0046, loss_rpn_cls: 0.0128, loss_rpn_bbox: 0.0455, loss_cls: 0.1483, acc: 93.7861, loss_bbox: 0.3072, loss: 0.5183
2023-11-07 12:27:16,260 - mmdet - INFO - Epoch [8][1200/1286]	lr: 5.000e-03, eta: 0:26:34, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0126, loss_rpn_bbox: 0.0386, loss_cls: 0.1475, acc: 93.8496, loss_bbox: 0.2930, loss: 0.4962
2023-11-07 12:27:31,862 - mmdet - INFO - Epoch [8][1250/1286]	lr: 5.000e-03, eta: 0:26:19, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0045, loss_rpn_cls: 0.0130, loss_rpn_bbox: 0.0433, loss_cls: 0.1453, acc: 93.8662, loss_bbox: 0.2948, loss: 0.5009
2023-11-07 12:27:43,103 - mmdet - INFO - Saving checkpoint at 8 epochs
2023-11-07 12:28:22,108 - mmdet - INFO - Evaluating bbox...
2023-11-07 12:28:25,459 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.9440 | person   | 0.9102 | bicycle  | 0.8581 |
| dog      | 0.7598 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:28:25,459 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.6088 | person   | 0.4621 | bicycle  | 0.3865 |
| dog      | 0.3969 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:28:25,480 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 12:28:25,480 - mmdet - INFO - Epoch(val) [8][1013]	bbox_mAP: 0.4636, bbox_mAP_50: 0.8680, bbox_mAP_75: 0.4405, bbox_mAP_s: 0.3381, bbox_mAP_m: 0.5320, bbox_mAP_l: 0.6538, bbox_mAP_copypaste: 0.4636 0.8680 0.4405 0.3381 0.5320 0.6538
2023-11-07 12:28:43,254 - mmdet - INFO - Epoch [9][50/1286]	lr: 5.000e-04, eta: 0:25:49, time: 0.355, data_time: 0.050, memory: 5972, mask_loss: 0.0042, loss_rpn_cls: 0.0110, loss_rpn_bbox: 0.0355, loss_cls: 0.1213, acc: 94.8896, loss_bbox: 0.2562, loss: 0.4281
2023-11-07 12:28:58,768 - mmdet - INFO - Epoch [9][100/1286]	lr: 5.000e-04, eta: 0:25:34, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0041, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0343, loss_cls: 0.1173, acc: 95.1826, loss_bbox: 0.2492, loss: 0.4152
2023-11-07 12:29:14,344 - mmdet - INFO - Epoch [9][150/1286]	lr: 5.000e-04, eta: 0:25:19, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0044, loss_rpn_cls: 0.0109, loss_rpn_bbox: 0.0373, loss_cls: 0.1185, acc: 95.0127, loss_bbox: 0.2618, loss: 0.4329
2023-11-07 12:29:29,847 - mmdet - INFO - Epoch [9][200/1286]	lr: 5.000e-04, eta: 0:25:04, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0042, loss_rpn_cls: 0.0111, loss_rpn_bbox: 0.0368, loss_cls: 0.1281, acc: 94.6328, loss_bbox: 0.2669, loss: 0.4470
2023-11-07 12:29:45,287 - mmdet - INFO - Epoch [9][250/1286]	lr: 5.000e-04, eta: 0:24:49, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0038, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0350, loss_cls: 0.1193, acc: 95.0078, loss_bbox: 0.2566, loss: 0.4243
2023-11-07 12:30:00,799 - mmdet - INFO - Epoch [9][300/1286]	lr: 5.000e-04, eta: 0:24:34, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0111, loss_rpn_bbox: 0.0336, loss_cls: 0.1183, acc: 95.0127, loss_bbox: 0.2578, loss: 0.4246
2023-11-07 12:30:16,327 - mmdet - INFO - Epoch [9][350/1286]	lr: 5.000e-04, eta: 0:24:19, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0094, loss_rpn_bbox: 0.0349, loss_cls: 0.1258, acc: 94.6758, loss_bbox: 0.2621, loss: 0.4362
2023-11-07 12:30:31,871 - mmdet - INFO - Epoch [9][400/1286]	lr: 5.000e-04, eta: 0:24:03, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0036, loss_rpn_cls: 0.0095, loss_rpn_bbox: 0.0351, loss_cls: 0.1213, acc: 94.8389, loss_bbox: 0.2530, loss: 0.4225
2023-11-07 12:30:47,377 - mmdet - INFO - Epoch [9][450/1286]	lr: 5.000e-04, eta: 0:23:48, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0351, loss_cls: 0.1220, acc: 94.8760, loss_bbox: 0.2491, loss: 0.4191
2023-11-07 12:31:02,853 - mmdet - INFO - Epoch [9][500/1286]	lr: 5.000e-04, eta: 0:23:33, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0043, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0343, loss_cls: 0.1141, acc: 95.1982, loss_bbox: 0.2432, loss: 0.4058
2023-11-07 12:31:18,379 - mmdet - INFO - Epoch [9][550/1286]	lr: 5.000e-04, eta: 0:23:18, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0361, loss_cls: 0.1228, acc: 94.6914, loss_bbox: 0.2627, loss: 0.4354
2023-11-07 12:31:33,854 - mmdet - INFO - Epoch [9][600/1286]	lr: 5.000e-04, eta: 0:23:03, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0036, loss_rpn_cls: 0.0105, loss_rpn_bbox: 0.0331, loss_cls: 0.1118, acc: 95.3262, loss_bbox: 0.2471, loss: 0.4059
2023-11-07 12:31:49,322 - mmdet - INFO - Epoch [9][650/1286]	lr: 5.000e-04, eta: 0:22:48, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0309, loss_cls: 0.1064, acc: 95.6191, loss_bbox: 0.2332, loss: 0.3832
2023-11-07 12:32:04,855 - mmdet - INFO - Epoch [9][700/1286]	lr: 5.000e-04, eta: 0:22:33, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0093, loss_rpn_bbox: 0.0373, loss_cls: 0.1229, acc: 94.8877, loss_bbox: 0.2588, loss: 0.4323
2023-11-07 12:32:20,314 - mmdet - INFO - Epoch [9][750/1286]	lr: 5.000e-04, eta: 0:22:18, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0331, loss_cls: 0.1185, acc: 95.0244, loss_bbox: 0.2496, loss: 0.4146
2023-11-07 12:32:35,843 - mmdet - INFO - Epoch [9][800/1286]	lr: 5.000e-04, eta: 0:22:03, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0043, loss_rpn_cls: 0.0098, loss_rpn_bbox: 0.0343, loss_cls: 0.1221, acc: 94.8506, loss_bbox: 0.2553, loss: 0.4259
2023-11-07 12:32:51,407 - mmdet - INFO - Epoch [9][850/1286]	lr: 5.000e-04, eta: 0:21:47, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0099, loss_rpn_bbox: 0.0342, loss_cls: 0.1223, acc: 94.8916, loss_bbox: 0.2591, loss: 0.4295
2023-11-07 12:33:06,943 - mmdet - INFO - Epoch [9][900/1286]	lr: 5.000e-04, eta: 0:21:32, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0104, loss_rpn_bbox: 0.0354, loss_cls: 0.1193, acc: 94.9912, loss_bbox: 0.2512, loss: 0.4197
2023-11-07 12:33:22,442 - mmdet - INFO - Epoch [9][950/1286]	lr: 5.000e-04, eta: 0:21:17, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0363, loss_cls: 0.1162, acc: 95.0469, loss_bbox: 0.2476, loss: 0.4124
2023-11-07 12:33:38,009 - mmdet - INFO - Epoch [9][1000/1286]	lr: 5.000e-04, eta: 0:21:02, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0094, loss_rpn_bbox: 0.0365, loss_cls: 0.1202, acc: 94.9268, loss_bbox: 0.2520, loss: 0.4216
2023-11-07 12:33:53,495 - mmdet - INFO - Epoch [9][1050/1286]	lr: 5.000e-04, eta: 0:20:47, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0101, loss_rpn_bbox: 0.0348, loss_cls: 0.1202, acc: 94.9365, loss_bbox: 0.2488, loss: 0.4179
2023-11-07 12:34:08,960 - mmdet - INFO - Epoch [9][1100/1286]	lr: 5.000e-04, eta: 0:20:32, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0038, loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0341, loss_cls: 0.1195, acc: 94.9365, loss_bbox: 0.2555, loss: 0.4215
2023-11-07 12:34:24,478 - mmdet - INFO - Epoch [9][1150/1286]	lr: 5.000e-04, eta: 0:20:17, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0343, loss_cls: 0.1204, acc: 94.9434, loss_bbox: 0.2601, loss: 0.4273
2023-11-07 12:34:40,074 - mmdet - INFO - Epoch [9][1200/1286]	lr: 5.000e-04, eta: 0:20:02, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0098, loss_rpn_bbox: 0.0385, loss_cls: 0.1239, acc: 94.7920, loss_bbox: 0.2626, loss: 0.4388
2023-11-07 12:34:55,685 - mmdet - INFO - Epoch [9][1250/1286]	lr: 5.000e-04, eta: 0:19:46, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0103, loss_rpn_bbox: 0.0357, loss_cls: 0.1199, acc: 94.9219, loss_bbox: 0.2514, loss: 0.4211
2023-11-07 12:35:06,948 - mmdet - INFO - Saving checkpoint at 9 epochs
2023-11-07 12:35:45,777 - mmdet - INFO - Evaluating bbox...
2023-11-07 12:35:48,308 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.9587 | person   | 0.9255 | bicycle  | 0.9172 |
| dog      | 0.8829 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:35:48,308 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.6624 | person   | 0.5243 | bicycle  | 0.4864 |
| dog      | 0.4590 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:35:48,324 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 12:35:48,324 - mmdet - INFO - Epoch(val) [9][1013]	bbox_mAP: 0.5330, bbox_mAP_50: 0.9211, bbox_mAP_75: 0.4964, bbox_mAP_s: 0.4211, bbox_mAP_m: 0.5978, bbox_mAP_l: 0.7067, bbox_mAP_copypaste: 0.5330 0.9211 0.4964 0.4211 0.5978 0.7067
2023-11-07 12:36:06,096 - mmdet - INFO - Epoch [10][50/1286]	lr: 5.000e-04, eta: 0:19:17, time: 0.355, data_time: 0.049, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0351, loss_cls: 0.1218, acc: 94.7236, loss_bbox: 0.2615, loss: 0.4312
2023-11-07 12:36:21,685 - mmdet - INFO - Epoch [10][100/1286]	lr: 5.000e-04, eta: 0:19:02, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0085, loss_rpn_bbox: 0.0357, loss_cls: 0.1175, acc: 95.0195, loss_bbox: 0.2499, loss: 0.4157
2023-11-07 12:36:37,106 - mmdet - INFO - Epoch [10][150/1286]	lr: 5.000e-04, eta: 0:18:47, time: 0.308, data_time: 0.005, memory: 5972, mask_loss: 0.0034, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0277, loss_cls: 0.1047, acc: 95.6465, loss_bbox: 0.2245, loss: 0.3679
2023-11-07 12:36:52,536 - mmdet - INFO - Epoch [10][200/1286]	lr: 5.000e-04, eta: 0:18:32, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0036, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0313, loss_cls: 0.1029, acc: 95.6465, loss_bbox: 0.2316, loss: 0.3781
2023-11-07 12:37:08,022 - mmdet - INFO - Epoch [10][250/1286]	lr: 5.000e-04, eta: 0:18:17, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0343, loss_cls: 0.1140, acc: 95.2295, loss_bbox: 0.2516, loss: 0.4121
2023-11-07 12:37:23,536 - mmdet - INFO - Epoch [10][300/1286]	lr: 5.000e-04, eta: 0:18:02, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0033, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0323, loss_cls: 0.1098, acc: 95.3564, loss_bbox: 0.2440, loss: 0.3977
2023-11-07 12:37:39,121 - mmdet - INFO - Epoch [10][350/1286]	lr: 5.000e-04, eta: 0:17:47, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0353, loss_cls: 0.1140, acc: 95.1924, loss_bbox: 0.2501, loss: 0.4118
2023-11-07 12:37:54,671 - mmdet - INFO - Epoch [10][400/1286]	lr: 5.000e-04, eta: 0:17:32, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0041, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0315, loss_cls: 0.1129, acc: 95.2754, loss_bbox: 0.2485, loss: 0.4046
2023-11-07 12:38:10,189 - mmdet - INFO - Epoch [10][450/1286]	lr: 5.000e-04, eta: 0:17:17, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0353, loss_cls: 0.1142, acc: 95.1797, loss_bbox: 0.2392, loss: 0.4019
2023-11-07 12:38:25,744 - mmdet - INFO - Epoch [10][500/1286]	lr: 5.000e-04, eta: 0:17:01, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0038, loss_rpn_cls: 0.0085, loss_rpn_bbox: 0.0347, loss_cls: 0.1142, acc: 95.1367, loss_bbox: 0.2432, loss: 0.4044
2023-11-07 12:38:41,261 - mmdet - INFO - Epoch [10][550/1286]	lr: 5.000e-04, eta: 0:16:46, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0351, loss_cls: 0.1204, acc: 94.8408, loss_bbox: 0.2577, loss: 0.4258
2023-11-07 12:38:56,900 - mmdet - INFO - Epoch [10][600/1286]	lr: 5.000e-04, eta: 0:16:31, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0357, loss_cls: 0.1229, acc: 94.8379, loss_bbox: 0.2586, loss: 0.4297
2023-11-07 12:39:12,456 - mmdet - INFO - Epoch [10][650/1286]	lr: 5.000e-04, eta: 0:16:16, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0340, loss_cls: 0.1208, acc: 94.9102, loss_bbox: 0.2557, loss: 0.4233
2023-11-07 12:39:27,933 - mmdet - INFO - Epoch [10][700/1286]	lr: 5.000e-04, eta: 0:16:01, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0318, loss_cls: 0.1085, acc: 95.4355, loss_bbox: 0.2323, loss: 0.3854
2023-11-07 12:39:43,441 - mmdet - INFO - Epoch [10][750/1286]	lr: 5.000e-04, eta: 0:15:46, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0344, loss_cls: 0.1132, acc: 95.2227, loss_bbox: 0.2430, loss: 0.4028
2023-11-07 12:39:58,980 - mmdet - INFO - Epoch [10][800/1286]	lr: 5.000e-04, eta: 0:15:31, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0036, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0379, loss_cls: 0.1181, acc: 95.0195, loss_bbox: 0.2527, loss: 0.4220
2023-11-07 12:40:14,472 - mmdet - INFO - Epoch [10][850/1286]	lr: 5.000e-04, eta: 0:15:15, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0100, loss_rpn_bbox: 0.0348, loss_cls: 0.1149, acc: 95.2705, loss_bbox: 0.2415, loss: 0.4050
2023-11-07 12:40:30,029 - mmdet - INFO - Epoch [10][900/1286]	lr: 5.000e-04, eta: 0:15:00, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0372, loss_cls: 0.1132, acc: 95.1982, loss_bbox: 0.2432, loss: 0.4055
2023-11-07 12:40:45,561 - mmdet - INFO - Epoch [10][950/1286]	lr: 5.000e-04, eta: 0:14:45, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0096, loss_rpn_bbox: 0.0346, loss_cls: 0.1156, acc: 95.1006, loss_bbox: 0.2464, loss: 0.4099
2023-11-07 12:41:01,123 - mmdet - INFO - Epoch [10][1000/1286]	lr: 5.000e-04, eta: 0:14:30, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0042, loss_rpn_cls: 0.0087, loss_rpn_bbox: 0.0342, loss_cls: 0.1174, acc: 95.0381, loss_bbox: 0.2540, loss: 0.4184
2023-11-07 12:41:16,687 - mmdet - INFO - Epoch [10][1050/1286]	lr: 5.000e-04, eta: 0:14:15, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0036, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0322, loss_cls: 0.1161, acc: 95.0762, loss_bbox: 0.2453, loss: 0.4046
2023-11-07 12:41:32,221 - mmdet - INFO - Epoch [10][1100/1286]	lr: 5.000e-04, eta: 0:14:00, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0333, loss_cls: 0.1148, acc: 95.1572, loss_bbox: 0.2428, loss: 0.4035
2023-11-07 12:41:47,718 - mmdet - INFO - Epoch [10][1150/1286]	lr: 5.000e-04, eta: 0:13:44, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0320, loss_cls: 0.1145, acc: 95.1289, loss_bbox: 0.2446, loss: 0.4033
2023-11-07 12:42:03,324 - mmdet - INFO - Epoch [10][1200/1286]	lr: 5.000e-04, eta: 0:13:29, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0094, loss_rpn_bbox: 0.0352, loss_cls: 0.1257, acc: 94.6680, loss_bbox: 0.2639, loss: 0.4379
2023-11-07 12:42:18,819 - mmdet - INFO - Epoch [10][1250/1286]	lr: 5.000e-04, eta: 0:13:14, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0034, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0321, loss_cls: 0.1126, acc: 95.2061, loss_bbox: 0.2419, loss: 0.3984
2023-11-07 12:42:30,075 - mmdet - INFO - Saving checkpoint at 10 epochs
2023-11-07 12:43:08,857 - mmdet - INFO - Evaluating bbox...
2023-11-07 12:43:11,374 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.9549 | person   | 0.9280 | bicycle  | 0.9374 |
| dog      | 0.8888 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:43:11,374 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.6660 | person   | 0.5277 | bicycle  | 0.4986 |
| dog      | 0.5125 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:43:11,390 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 12:43:11,390 - mmdet - INFO - Epoch(val) [10][1013]	bbox_mAP: 0.5512, bbox_mAP_50: 0.9273, bbox_mAP_75: 0.5453, bbox_mAP_s: 0.4212, bbox_mAP_m: 0.6114, bbox_mAP_l: 0.7212, bbox_mAP_copypaste: 0.5512 0.9273 0.5453 0.4212 0.6114 0.7212
2023-11-07 12:43:29,121 - mmdet - INFO - Epoch [11][50/1286]	lr: 5.000e-04, eta: 0:12:46, time: 0.354, data_time: 0.050, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0079, loss_rpn_bbox: 0.0330, loss_cls: 0.1107, acc: 95.2979, loss_bbox: 0.2351, loss: 0.3903
2023-11-07 12:43:44,695 - mmdet - INFO - Epoch [11][100/1286]	lr: 5.000e-04, eta: 0:12:31, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0036, loss_rpn_cls: 0.0097, loss_rpn_bbox: 0.0355, loss_cls: 0.1133, acc: 95.1875, loss_bbox: 0.2490, loss: 0.4111
2023-11-07 12:44:00,163 - mmdet - INFO - Epoch [11][150/1286]	lr: 5.000e-04, eta: 0:12:16, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0308, loss_cls: 0.1079, acc: 95.4395, loss_bbox: 0.2360, loss: 0.3869
2023-11-07 12:44:15,667 - mmdet - INFO - Epoch [11][200/1286]	lr: 5.000e-04, eta: 0:12:01, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0347, loss_cls: 0.1134, acc: 95.1914, loss_bbox: 0.2438, loss: 0.4042
2023-11-07 12:44:31,173 - mmdet - INFO - Epoch [11][250/1286]	lr: 5.000e-04, eta: 0:11:46, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0076, loss_rpn_bbox: 0.0339, loss_cls: 0.1084, acc: 95.4414, loss_bbox: 0.2303, loss: 0.3840
2023-11-07 12:44:46,728 - mmdet - INFO - Epoch [11][300/1286]	lr: 5.000e-04, eta: 0:11:31, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0102, loss_rpn_bbox: 0.0373, loss_cls: 0.1189, acc: 94.9453, loss_bbox: 0.2530, loss: 0.4233
2023-11-07 12:45:02,298 - mmdet - INFO - Epoch [11][350/1286]	lr: 5.000e-04, eta: 0:11:15, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0038, loss_rpn_cls: 0.0093, loss_rpn_bbox: 0.0392, loss_cls: 0.1193, acc: 94.9727, loss_bbox: 0.2559, loss: 0.4275
2023-11-07 12:45:17,883 - mmdet - INFO - Epoch [11][400/1286]	lr: 5.000e-04, eta: 0:11:00, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0368, loss_cls: 0.1257, acc: 94.7041, loss_bbox: 0.2633, loss: 0.4386
2023-11-07 12:45:33,423 - mmdet - INFO - Epoch [11][450/1286]	lr: 5.000e-04, eta: 0:10:45, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0331, loss_cls: 0.1072, acc: 95.5098, loss_bbox: 0.2324, loss: 0.3841
2023-11-07 12:45:48,940 - mmdet - INFO - Epoch [11][500/1286]	lr: 5.000e-04, eta: 0:10:30, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0338, loss_cls: 0.1124, acc: 95.3105, loss_bbox: 0.2477, loss: 0.4066
2023-11-07 12:46:04,559 - mmdet - INFO - Epoch [11][550/1286]	lr: 5.000e-04, eta: 0:10:15, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0081, loss_rpn_bbox: 0.0396, loss_cls: 0.1282, acc: 94.5723, loss_bbox: 0.2674, loss: 0.4472
2023-11-07 12:46:20,046 - mmdet - INFO - Epoch [11][600/1286]	lr: 5.000e-04, eta: 0:10:00, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0069, loss_rpn_bbox: 0.0294, loss_cls: 0.1017, acc: 95.7275, loss_bbox: 0.2218, loss: 0.3634
2023-11-07 12:46:35,544 - mmdet - INFO - Epoch [11][650/1286]	lr: 5.000e-04, eta: 0:09:44, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0325, loss_cls: 0.1090, acc: 95.3740, loss_bbox: 0.2361, loss: 0.3895
2023-11-07 12:46:51,161 - mmdet - INFO - Epoch [11][700/1286]	lr: 5.000e-04, eta: 0:09:29, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0088, loss_rpn_bbox: 0.0338, loss_cls: 0.1148, acc: 95.1025, loss_bbox: 0.2508, loss: 0.4122
2023-11-07 12:47:06,742 - mmdet - INFO - Epoch [11][750/1286]	lr: 5.000e-04, eta: 0:09:14, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0041, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0336, loss_cls: 0.1164, acc: 95.0693, loss_bbox: 0.2473, loss: 0.4101
2023-11-07 12:47:22,281 - mmdet - INFO - Epoch [11][800/1286]	lr: 5.000e-04, eta: 0:08:59, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0312, loss_cls: 0.1072, acc: 95.4521, loss_bbox: 0.2380, loss: 0.3876
2023-11-07 12:47:37,784 - mmdet - INFO - Epoch [11][850/1286]	lr: 5.000e-04, eta: 0:08:44, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0074, loss_rpn_bbox: 0.0299, loss_cls: 0.1031, acc: 95.6455, loss_bbox: 0.2253, loss: 0.3693
2023-11-07 12:47:53,319 - mmdet - INFO - Epoch [11][900/1286]	lr: 5.000e-04, eta: 0:08:29, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0036, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0328, loss_cls: 0.1125, acc: 95.1924, loss_bbox: 0.2488, loss: 0.4047
2023-11-07 12:48:08,839 - mmdet - INFO - Epoch [11][950/1286]	lr: 5.000e-04, eta: 0:08:13, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0072, loss_rpn_bbox: 0.0325, loss_cls: 0.1091, acc: 95.3027, loss_bbox: 0.2417, loss: 0.3940
2023-11-07 12:48:24,355 - mmdet - INFO - Epoch [11][1000/1286]	lr: 5.000e-04, eta: 0:07:58, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0326, loss_cls: 0.1096, acc: 95.3916, loss_bbox: 0.2417, loss: 0.3962
2023-11-07 12:48:39,881 - mmdet - INFO - Epoch [11][1050/1286]	lr: 5.000e-04, eta: 0:07:43, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0081, loss_rpn_bbox: 0.0333, loss_cls: 0.1167, acc: 95.1084, loss_bbox: 0.2508, loss: 0.4124
2023-11-07 12:48:55,420 - mmdet - INFO - Epoch [11][1100/1286]	lr: 5.000e-04, eta: 0:07:28, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0036, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0357, loss_cls: 0.1134, acc: 95.2031, loss_bbox: 0.2423, loss: 0.4037
2023-11-07 12:49:11,019 - mmdet - INFO - Epoch [11][1150/1286]	lr: 5.000e-04, eta: 0:07:13, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0038, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0354, loss_cls: 0.1176, acc: 95.0322, loss_bbox: 0.2514, loss: 0.4172
2023-11-07 12:49:26,537 - mmdet - INFO - Epoch [11][1200/1286]	lr: 5.000e-04, eta: 0:06:57, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0329, loss_cls: 0.1093, acc: 95.3076, loss_bbox: 0.2402, loss: 0.3950
2023-11-07 12:49:42,040 - mmdet - INFO - Epoch [11][1250/1286]	lr: 5.000e-04, eta: 0:06:42, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0090, loss_rpn_bbox: 0.0323, loss_cls: 0.1125, acc: 95.2314, loss_bbox: 0.2443, loss: 0.4019
2023-11-07 12:49:53,208 - mmdet - INFO - Saving checkpoint at 11 epochs
2023-11-07 12:50:32,148 - mmdet - INFO - Evaluating bbox...
2023-11-07 12:50:34,544 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.9569 | person   | 0.9372 | bicycle  | 0.9421 |
| dog      | 0.8975 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:50:34,544 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.6738 | person   | 0.5525 | bicycle  | 0.5289 |
| dog      | 0.5020 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:50:34,559 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 12:50:34,559 - mmdet - INFO - Epoch(val) [11][1013]	bbox_mAP: 0.5643, bbox_mAP_50: 0.9334, bbox_mAP_75: 0.5697, bbox_mAP_s: 0.4502, bbox_mAP_m: 0.6256, bbox_mAP_l: 0.7164, bbox_mAP_copypaste: 0.5643 0.9334 0.5697 0.4502 0.6256 0.7164
2023-11-07 12:50:52,244 - mmdet - INFO - Epoch [12][50/1286]	lr: 5.000e-05, eta: 0:06:15, time: 0.354, data_time: 0.049, memory: 5972, mask_loss: 0.0040, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0299, loss_cls: 0.1036, acc: 95.6709, loss_bbox: 0.2187, loss: 0.3638
2023-11-07 12:51:07,779 - mmdet - INFO - Epoch [12][100/1286]	lr: 5.000e-05, eta: 0:06:00, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0038, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0327, loss_cls: 0.1111, acc: 95.3877, loss_bbox: 0.2419, loss: 0.3971
2023-11-07 12:51:23,286 - mmdet - INFO - Epoch [12][150/1286]	lr: 5.000e-05, eta: 0:05:45, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0082, loss_rpn_bbox: 0.0343, loss_cls: 0.1084, acc: 95.4229, loss_bbox: 0.2353, loss: 0.3899
2023-11-07 12:51:38,855 - mmdet - INFO - Epoch [12][200/1286]	lr: 5.000e-05, eta: 0:05:30, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0353, loss_cls: 0.1127, acc: 95.2930, loss_bbox: 0.2420, loss: 0.4024
2023-11-07 12:51:54,406 - mmdet - INFO - Epoch [12][250/1286]	lr: 5.000e-05, eta: 0:05:15, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0038, loss_rpn_cls: 0.0077, loss_rpn_bbox: 0.0333, loss_cls: 0.1091, acc: 95.3740, loss_bbox: 0.2471, loss: 0.4011
2023-11-07 12:52:09,948 - mmdet - INFO - Epoch [12][300/1286]	lr: 5.000e-05, eta: 0:04:59, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0085, loss_rpn_bbox: 0.0347, loss_cls: 0.1158, acc: 95.0801, loss_bbox: 0.2481, loss: 0.4108
2023-11-07 12:52:25,487 - mmdet - INFO - Epoch [12][350/1286]	lr: 5.000e-05, eta: 0:04:44, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0079, loss_rpn_bbox: 0.0339, loss_cls: 0.1114, acc: 95.3115, loss_bbox: 0.2400, loss: 0.3967
2023-11-07 12:52:41,040 - mmdet - INFO - Epoch [12][400/1286]	lr: 5.000e-05, eta: 0:04:29, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0038, loss_rpn_cls: 0.0092, loss_rpn_bbox: 0.0319, loss_cls: 0.1071, acc: 95.5195, loss_bbox: 0.2320, loss: 0.3841
2023-11-07 12:52:56,506 - mmdet - INFO - Epoch [12][450/1286]	lr: 5.000e-05, eta: 0:04:14, time: 0.309, data_time: 0.005, memory: 5972, mask_loss: 0.0032, loss_rpn_cls: 0.0071, loss_rpn_bbox: 0.0309, loss_cls: 0.1035, acc: 95.6445, loss_bbox: 0.2234, loss: 0.3682
2023-11-07 12:53:12,092 - mmdet - INFO - Epoch [12][500/1286]	lr: 5.000e-05, eta: 0:03:59, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0312, loss_cls: 0.1113, acc: 95.3115, loss_bbox: 0.2372, loss: 0.3907
2023-11-07 12:53:27,665 - mmdet - INFO - Epoch [12][550/1286]	lr: 5.000e-05, eta: 0:03:43, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0042, loss_rpn_cls: 0.0098, loss_rpn_bbox: 0.0348, loss_cls: 0.1200, acc: 94.8350, loss_bbox: 0.2491, loss: 0.4179
2023-11-07 12:53:43,229 - mmdet - INFO - Epoch [12][600/1286]	lr: 5.000e-05, eta: 0:03:28, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0083, loss_rpn_bbox: 0.0356, loss_cls: 0.1179, acc: 95.0605, loss_bbox: 0.2518, loss: 0.4176
2023-11-07 12:53:58,735 - mmdet - INFO - Epoch [12][650/1286]	lr: 5.000e-05, eta: 0:03:13, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0036, loss_rpn_cls: 0.0070, loss_rpn_bbox: 0.0284, loss_cls: 0.1025, acc: 95.7148, loss_bbox: 0.2275, loss: 0.3689
2023-11-07 12:54:14,276 - mmdet - INFO - Epoch [12][700/1286]	lr: 5.000e-05, eta: 0:02:58, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0065, loss_rpn_bbox: 0.0316, loss_cls: 0.1099, acc: 95.4033, loss_bbox: 0.2386, loss: 0.3905
2023-11-07 12:54:29,907 - mmdet - INFO - Epoch [12][750/1286]	lr: 5.000e-05, eta: 0:02:43, time: 0.313, data_time: 0.005, memory: 5972, mask_loss: 0.0038, loss_rpn_cls: 0.0080, loss_rpn_bbox: 0.0354, loss_cls: 0.1149, acc: 95.0889, loss_bbox: 0.2423, loss: 0.4044
2023-11-07 12:54:45,459 - mmdet - INFO - Epoch [12][800/1286]	lr: 5.000e-05, eta: 0:02:27, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0084, loss_rpn_bbox: 0.0339, loss_cls: 0.1110, acc: 95.2822, loss_bbox: 0.2424, loss: 0.3995
2023-11-07 12:55:01,029 - mmdet - INFO - Epoch [12][850/1286]	lr: 5.000e-05, eta: 0:02:12, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0334, loss_cls: 0.1100, acc: 95.3350, loss_bbox: 0.2350, loss: 0.3895
2023-11-07 12:55:16,554 - mmdet - INFO - Epoch [12][900/1286]	lr: 5.000e-05, eta: 0:01:57, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0034, loss_rpn_cls: 0.0086, loss_rpn_bbox: 0.0303, loss_cls: 0.1079, acc: 95.5449, loss_bbox: 0.2297, loss: 0.3799
2023-11-07 12:55:32,070 - mmdet - INFO - Epoch [12][950/1286]	lr: 5.000e-05, eta: 0:01:42, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0075, loss_rpn_bbox: 0.0313, loss_cls: 0.1064, acc: 95.4629, loss_bbox: 0.2278, loss: 0.3765
2023-11-07 12:55:47,580 - mmdet - INFO - Epoch [12][1000/1286]	lr: 5.000e-05, eta: 0:01:27, time: 0.310, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0069, loss_rpn_bbox: 0.0298, loss_cls: 0.1012, acc: 95.7119, loss_bbox: 0.2257, loss: 0.3675
2023-11-07 12:56:03,155 - mmdet - INFO - Epoch [12][1050/1286]	lr: 5.000e-05, eta: 0:01:11, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0037, loss_rpn_cls: 0.0081, loss_rpn_bbox: 0.0353, loss_cls: 0.1129, acc: 95.1338, loss_bbox: 0.2423, loss: 0.4023
2023-11-07 12:56:18,751 - mmdet - INFO - Epoch [12][1100/1286]	lr: 5.000e-05, eta: 0:00:56, time: 0.312, data_time: 0.005, memory: 5972, mask_loss: 0.0039, loss_rpn_cls: 0.0091, loss_rpn_bbox: 0.0374, loss_cls: 0.1176, acc: 95.0723, loss_bbox: 0.2487, loss: 0.4166
2023-11-07 12:56:34,326 - mmdet - INFO - Epoch [12][1150/1286]	lr: 5.000e-05, eta: 0:00:41, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0032, loss_rpn_cls: 0.0069, loss_rpn_bbox: 0.0338, loss_cls: 0.1119, acc: 95.2256, loss_bbox: 0.2451, loss: 0.4010
2023-11-07 12:56:49,888 - mmdet - INFO - Epoch [12][1200/1286]	lr: 5.000e-05, eta: 0:00:26, time: 0.311, data_time: 0.005, memory: 5972, mask_loss: 0.0035, loss_rpn_cls: 0.0073, loss_rpn_bbox: 0.0340, loss_cls: 0.1094, acc: 95.3418, loss_bbox: 0.2330, loss: 0.3872
2023-11-07 12:57:05,299 - mmdet - INFO - Epoch [12][1250/1286]	lr: 5.000e-05, eta: 0:00:10, time: 0.308, data_time: 0.005, memory: 5972, mask_loss: 0.0031, loss_rpn_cls: 0.0073, loss_rpn_bbox: 0.0280, loss_cls: 0.0984, acc: 95.7783, loss_bbox: 0.2159, loss: 0.3527
2023-11-07 12:57:16,504 - mmdet - INFO - Saving checkpoint at 12 epochs
2023-11-07 12:57:55,648 - mmdet - INFO - Evaluating bbox...
2023-11-07 12:57:58,121 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP50   | category | AP50   | category | AP50   |
+----------+--------+----------+--------+----------+--------+
| car      | 0.9626 | person   | 0.9358 | bicycle  | 0.9425 |
| dog      | 0.9010 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:57:58,122 - mmdet - INFO - 
+----------+--------+----------+--------+----------+--------+
| category | AP     | category | AP     | category | AP     |
+----------+--------+----------+--------+----------+--------+
| car      | 0.6766 | person   | 0.5451 | bicycle  | 0.5256 |
| dog      | 0.5403 | None     | None   | None     | None   |
+----------+--------+----------+--------+----------+--------+
2023-11-07 12:57:58,137 - mmdet - INFO - Exp name: faster_rcnn_r50_fpn_tinet_flir2.py
2023-11-07 12:57:58,137 - mmdet - INFO - Epoch(val) [12][1013]	bbox_mAP: 0.5719, bbox_mAP_50: 0.9355, bbox_mAP_75: 0.5840, bbox_mAP_s: 0.4635, bbox_mAP_m: 0.6307, bbox_mAP_l: 0.7435, bbox_mAP_copypaste: 0.5719 0.9355 0.5840 0.4635 0.6307 0.7435
